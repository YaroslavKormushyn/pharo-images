OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-17T12:13:19.677676+02:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-442fd72.2aoyiji6oom316gx6g2tyqfuh', '14148' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TWSparseMatrixVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder arrowHead offset |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: view.\r\tedgeBuilder elements: elements.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\t"Draw edges for row elements excluding headers"\r\tedgeBuilder shape styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color black.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el rightNeighbour isNotNil and: [ el rightNeighbour column > el column ])\r\t\t\t\tifTrue: [ el rightNeighbour ] ].\r\t"Draw row edges for row headers"\r\toffset := 4.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoHorizontalLineBottommostWithOffset: offset;\r\t\thorizontalRightAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color red.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el belowNeighbour isNotNil and: [ el belowNeighbour row < el row ])\r\t\t\t\tifTrue: [ el belowNeighbour ] ].\r\t"Draw edges for columns excluding headers"\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color black.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el belowNeighbour isNotNil and: [ el belowNeighbour row > el row ])\r\t\t\t\tifTrue: [ el belowNeighbour ] ].\r\t"Draw edges for column headers"\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoVerticalLineRightmostWithOffset: offset;\r\t\tverticalBottomAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color red.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el rightNeighbour isNotNil and: [ el rightNeighbour column < el column ])\r\t\t\t\tifTrue: [ el rightNeighbour ] ]',			#stamp : 'YaroslavKormushyn 5/15/2018 01:39',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TWSparseMatrixVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder arrowHead offset |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: view.\r\tedgeBuilder elements: elements.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\t"Draw edges for row elements excluding headers"\r\tedgeBuilder shape styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color black.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el rightNeighbour isNotNil and: [ el rightNeighbour column > el column ])\r\t\t\t\tifTrue: [ el rightNeighbour ] ].\r\t"Draw row edges for row headers"\r\toffset := 4.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoHorizontalLineBottommostWithOffset: offset;\r\t\thorizontalRightAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color red.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el belowNeighbour isNotNil and: [ el belowNeighbour row < el row ])\r\t\t\t\tifTrue: [ el belowNeighbour ] ].\r\t"Draw edges for columns excluding headers"\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color black.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el belowNeighbour isNotNil and: [ el belowNeighbour row > el row ])\r\t\t\t\tifTrue: [ el belowNeighbour ] ].\r\t"Draw edges for column headers"\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoVerticalLineRightmostWithOffset: offset;\r\t\tverticalBottomAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color red.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el rightNeighbour isNotNil and: [ el rightNeighbour column <= el column ])\r\t\t\t\tifTrue: [ el rightNeighbour ] ]',			#stamp : 'YaroslavKormushyn 3/17/2019 12:13',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-17T12:14:12.150676+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TWSparseMatrixVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder arrowHead offset |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: view.\r\tedgeBuilder elements: elements.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\t"Draw edges for row elements excluding headers"\r\tedgeBuilder shape styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color black.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el rightNeighbour isNotNil and: [ el rightNeighbour column > el column ])\r\t\t\t\tifTrue: [ el rightNeighbour ] ].\r\t"Draw row edges for row headers"\r\toffset := 4.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoHorizontalLineBottommostWithOffset: offset;\r\t\thorizontalRightAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color red.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el belowNeighbour isNotNil and: [ el belowNeighbour row < el row ])\r\t\t\t\tifTrue: [ el belowNeighbour ] ].\r\t"Draw edges for columns excluding headers"\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color black.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el belowNeighbour isNotNil and: [ el belowNeighbour row > el row ])\r\t\t\t\tifTrue: [ el belowNeighbour ] ].\r\t"Draw edges for column headers"\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoVerticalLineRightmostWithOffset: offset;\r\t\tverticalBottomAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color red.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el rightNeighbour isNotNil and: [ el rightNeighbour column <= el column ])\r\t\t\t\tifTrue: [ el rightNeighbour ] ]',			#stamp : 'YaroslavKormushyn 3/17/2019 12:13',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TWSparseMatrixVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder arrowHead offset |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: view.\r\tedgeBuilder elements: elements.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\t"Draw edges for row elements excluding headers"\r\tedgeBuilder shape styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color black.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el rightNeighbour isNotNil and: [ el rightNeighbour column > el column ])\r\t\t\t\tifTrue: [ el rightNeighbour ] ].\r\t"Draw row edges for row headers"\r\toffset := 4.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoHorizontalLineBottommostWithOffset: offset;\r\t\thorizontalRightAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color red.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el belowNeighbour isNotNil and: [ el belowNeighbour row <= el row ])\r\t\t\t\tifTrue: [ el belowNeighbour ] ].\r\t"Draw edges for columns excluding headers"\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color black.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el belowNeighbour isNotNil and: [ el belowNeighbour row > el row ])\r\t\t\t\tifTrue: [ el belowNeighbour ] ].\r\t"Draw edges for column headers"\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tedgeBuilder shape styledLine\r\t\torthoVerticalLineRightmostWithOffset: offset;\r\t\tverticalBottomAttachPoint;\r\t\thead: arrowHead;\r\t\tcolor: Color red.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\t(el rightNeighbour isNotNil and: [ el rightNeighbour column <= el column ])\r\t\t\t\tifTrue: [ el rightNeighbour ] ]',			#stamp : 'YaroslavKormushyn 3/17/2019 12:14',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-17T13:12:45.583676+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MatrixVisualizer,				#isMetaSide : false			},			#name : #'withView:',			#protocol : #initialization,			#sourceCode : 'withView: aView\r\tview := aView',			#stamp : 'YaroslavKormushyn 3/17/2019 13:12',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-17T13:14:04.472676+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TWSparseMatrixVisualizer class',				#isMetaSide : true			},			#name : #'on:withView:',			#protocol : #'instance creation',			#sourceCode : 'on: aTWSparseMatrix withView: aView\r\t(aTWSparseMatrix isMemberOf: TWSparseMatrix)\r\t\tifFalse: [ Error signal: \'Matrix should be of class \' , TWSparseMatrix className ].\r\t^ (self new withView: aView) on: aTWSparseMatrix',			#stamp : 'YaroslavKormushyn 3/17/2019 13:14',			#package : #LNU-SparseMatrix		}	}}