OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-03-28T13:43:00.797673+02:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-442fd72.4tkwqbv0volax16kkixcrfk8x', '4' ],		#self : OmReference [ '1' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #COOSparseMatrixVisualizer,				#isMetaSide : false			},			#name : #'multiply:by:',			#protocol : #'as yet unclassified',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r|composer |\rcomposer := RTComposer new.\rcomposer gap: 35.\rMatrixVisualizer on: leftMatrix withView: composer view.\rcomposer group: #left.\rMatrixVisualizer on: rightMatrix withView: composer view.\rcomposer group: #right.\rcomposer move: #left onTheLeftOf: #right.\rcomposer nameGroup: #left as: \'left\'.\rcomposer nameGroup: #right as: \'second\'.\r^ composer view',			#stamp : 'YaroslavKormushyn 3/23/2019 23:31',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-28T13:43:09.641673+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'COOSparseMatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'as yet unclassified',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r|composer |\rcomposer := RTComposer new.\rcomposer gap: 35.\rMatrixVisualizer on: leftMatrix withView: composer view.\rcomposer group: #left.\rMatrixVisualizer on: rightMatrix withView: composer view.\rcomposer group: #right.\rcomposer move: #left onTheLeftOf: #right.\rcomposer nameGroup: #left as: \'left\'.\rcomposer nameGroup: #right as: \'second\'.\r^ composer view',			#stamp : 'YaroslavKormushyn 3/28/2019 13:43',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-29T11:48:59.918673+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'COOSparseMatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'as yet unclassified',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r|composer |\rcomposer := RTComposer new.\rcomposer gap: 35.\rMatrixVisualizer on: leftMatrix withView: composer view.\rcomposer group: #left.\rMatrixVisualizer on: rightMatrix withView: composer view.\rcomposer group: #right.\rcomposer move: #left onTheLeftOf: #right.\rcomposer nameGroup: #left as: \'left\'.\rcomposer nameGroup: #right as: \'second\'.\r^ composer view',			#stamp : 'YaroslavKormushyn 3/28/2019 13:43',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'COOSparseMatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'as yet unclassified',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r\t| composer innerContext |\r\tcomposer := RTComposer new.\r\tcomposer gap: 35.\r\tMatrixVisualizer on: leftMatrix withView: composer view.\r\tcomposer group: #left.\r\tMatrixVisualizer on: rightMatrix withView: composer view.\r\tcomposer group: #right.\r\tcomposer move: #left onTheLeftOf: #right.\r\tcomposer nameGroup: #left as: \'left\'.\r\tcomposer nameGroup: #right as: \'second\'.\r\t\r\tinnerContext := [ leftMatrix * rightMatrix ].\r\t\r\t^ composer view',			#stamp : 'YaroslavKormushyn 3/29/2019 11:48',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-29T11:49:52.234673+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'instance creation',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r\t| composer innerContext |\r\tcomposer := RTComposer new.\r\tcomposer gap: 35.\r\tMatrixVisualizer on: leftMatrix withView: composer view.\r\tcomposer group: #left.\r\tMatrixVisualizer on: rightMatrix withView: composer view.\r\tcomposer group: #right.\r\tcomposer move: #left onTheLeftOf: #right.\r\tcomposer nameGroup: #left as: \'left\'.\r\tcomposer nameGroup: #right as: \'second\'.\r\tinnerContext := [ leftMatrix * rightMatrix ].\r\t^ composer view',			#stamp : 'YaroslavKormushyn 3/29/2019 11:49',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-29T11:52:35.917673+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'instance creation',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r\t| composer innerContext |\r\tcomposer := RTComposer new.\r\tcomposer gap: 35.\r\tMatrixVisualizer on: leftMatrix withView: composer view.\r\tcomposer group: #left.\r\tMatrixVisualizer on: rightMatrix withView: composer view.\r\tcomposer group: #right.\r\tcomposer move: #left onTheLeftOf: #right.\r\tcomposer nameGroup: #left as: \'left\'.\r\tcomposer nameGroup: #right as: \'second\'.\r\tinnerContext := [ leftMatrix * rightMatrix ].\r\t^ composer view',			#stamp : 'YaroslavKormushyn 3/29/2019 11:49',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'instance creation',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r\t| composer innerContext |\r\tcomposer := RTComposer new.\r\tcomposer gap: 35.\r\tMatrixVisualizer on: leftMatrix withView: composer view.\r\tcomposer group: #left.\r\tMatrixVisualizer on: rightMatrix withView: composer view.\r\tcomposer group: #right.\r\tcomposer move: #left onTheLeftOf: #right.\r\tcomposer nameGroup: #left as: \'left\'.\r\tcomposer nameGroup: #right as: \'second\'.\r\tinnerContext := [ leftMatrix * rightMatrix ] value.\r\t^ composer view',			#stamp : 'YaroslavKormushyn 3/29/2019 11:52',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-29T12:14:41.151673+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'instance creation',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r\t| composer innerContext |\r\tcomposer := RTComposer new.\r\tcomposer gap: 35.\r\tMatrixVisualizer on: leftMatrix withView: composer view.\r\tcomposer group: #left.\r\tMatrixVisualizer on: rightMatrix withView: composer view.\r\tcomposer group: #right.\r\tcomposer move: #left onTheLeftOf: #right.\r\tcomposer nameGroup: #left as: \'left\'.\r\tcomposer nameGroup: #right as: \'second\'.\r\tinnerContext := [ leftMatrix * rightMatrix ] value.\r\t^ composer view',			#stamp : 'YaroslavKormushyn 3/29/2019 11:52',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'instance creation',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r\t| composer innerContext |\r\tcomposer := RTComposer new.\r\tcomposer gap: 35.\r\tMatrixVisualizer on: leftMatrix withView: composer view.\r\tcomposer group: #left.\r\tMatrixVisualizer on: rightMatrix withView: composer view.\r\tcomposer group: #right.\r\tcomposer move: #left onTheLeftOf: #right.\r\tcomposer nameGroup: #left as: \'left\'.\r\tcomposer nameGroup: #right as: \'second\'.\r\tinnerContext := [ leftMatrix * rightMatrix ] value.\r\tinnerContext := innerContext value.\r\t^ composer view',			#stamp : 'YaroslavKormushyn 3/29/2019 12:14',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-03-29T12:14:50.787673+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'instance creation',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r\t| composer innerContext |\r\tcomposer := RTComposer new.\r\tcomposer gap: 35.\r\tMatrixVisualizer on: leftMatrix withView: composer view.\r\tcomposer group: #left.\r\tMatrixVisualizer on: rightMatrix withView: composer view.\r\tcomposer group: #right.\r\tcomposer move: #left onTheLeftOf: #right.\r\tcomposer nameGroup: #left as: \'left\'.\r\tcomposer nameGroup: #right as: \'second\'.\r\tinnerContext := [ leftMatrix * rightMatrix ] value.\r\tinnerContext := innerContext value.\r\t^ composer view',			#stamp : 'YaroslavKormushyn 3/29/2019 12:14',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MatrixVisualizer class',				#isMetaSide : true			},			#name : #'multiply:by:',			#protocol : #'instance creation',			#sourceCode : 'multiply: leftMatrix by: rightMatrix\r\t| composer innerContext |\r\tcomposer := RTComposer new.\r\tcomposer gap: 35.\r\tMatrixVisualizer on: leftMatrix withView: composer view.\r\tcomposer group: #left.\r\tMatrixVisualizer on: rightMatrix withView: composer view.\r\tcomposer group: #right.\r\tcomposer move: #left onTheLeftOf: #right.\r\tcomposer nameGroup: #left as: \'left\'.\r\tcomposer nameGroup: #right as: \'second\'.\r\tinnerContext := [ leftMatrix * rightMatrix ].\r\tinnerContext := innerContext value.\r\t^ composer view',			#stamp : 'YaroslavKormushyn 3/29/2019 12:14',			#package : #LNU-SparseMatrix		}	}}