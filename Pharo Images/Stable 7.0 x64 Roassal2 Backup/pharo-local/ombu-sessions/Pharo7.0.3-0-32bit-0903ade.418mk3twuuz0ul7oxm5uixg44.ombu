OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T17:40:18.807812+03:00' ],		#prior : OmReference [ 'Pharo7.0.3-0-32bit-0903ade.4u57uso161o4ayf2f4bd6fdt2', '1' ],		#self : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataOperationVizualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataOperationVizualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataOperationVizualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataOperationVizualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataOperationVizualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T18:00:29.973812+03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'addLinkMessages:',			#protocol : #accessing,			#sourceCode : 'addLinkMessages: messages\r\tmessages isCollection\r\t\tifFalse: [ Error signal: \'You should add messages to a collection.\' ].\r\tmessages isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessageConfigs addAll: (messages collect: [ :msg | msg asSymbol ])',			#stamp : 'YaroslavKormushyn 9/24/2019 17:40',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'addLinkMessages:',			#protocol : #'as yet unclassified',			#sourceCode : 'addLinkMessages: messages\r\tmessages isCollection\r\t\tifFalse: [ Error signal: \'You should add messages to a collection.\' ].\r\tmessages isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessageConfigs addAll: (messages collect: [ :msg | msg asSymbol ])',			#stamp : 'YaroslavKormushyn 9/24/2019 17:40',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T18:00:30.047812+03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'addLinkMessages:',			#protocol : #accessing,			#sourceCode : 'addLinkMessages: messages\r\tmessages isCollection\r\t\tifFalse: [ Error signal: \'You should add messages to a collection.\' ].\r\tmessages isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessageConfigs addAll: (messages collect: [ :msg | msg asSymbol ])',			#stamp : 'YaroslavKormushyn 9/24/2019 17:40',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:00:37.276812+03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #'addLinkMessages:',			#protocol : #accessing,			#sourceCode : 'addLinkMessages: messages\r\tmessages isCollection\r\t\tifFalse: [ Error signal: \'You should add messages to a collection.\' ].\r\tmessages isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessageConfigs addAll: (messages collect: [ :msg | msg asSymbol ])',			#stamp : 'YaroslavKormushyn 10/4/2019 18:00',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:00.022812+03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #accessing,			#sourceCode : 'linkMessages: messageConfigs\r\tmessageConfigs isCollection\r\t\tifFalse: [ Error signal: \'You should add message link configurations to a collection.\' ].\r\tmessageConfigs isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessages := messageConfigs collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 9/24/2019 15:03',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #'as yet unclassified',			#sourceCode : 'linkMessages: messageConfigs\r\tmessageConfigs isCollection\r\t\tifFalse: [ Error signal: \'You should add message link configurations to a collection.\' ].\r\tmessageConfigs isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessages := messageConfigs collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 9/24/2019 15:03',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:00.128812+03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #accessing,			#sourceCode : 'linkMessages: messageConfigs\r\tmessageConfigs isCollection\r\t\tifFalse: [ Error signal: \'You should add message link configurations to a collection.\' ].\r\tmessageConfigs isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessages := messageConfigs collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 9/24/2019 15:03',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:00.144812+03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #accessing,			#sourceCode : 'linkMessages: messageConfigs\r\tmessageConfigs isCollection\r\t\tifFalse: [ Error signal: \'You should add message link configurations to a collection.\' ].\r\tmessageConfigs isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessages := messageConfigs collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 10/4/2019 18:01',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:04.027812+03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setLinks,			#protocol : #initialization,			#sourceCode : 'setLinks\r"set links for operands in method operator and the result of its execution"',			#stamp : 'YaroslavKormushyn 9/23/2019 15:52',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setLinks,			#protocol : #'as yet unclassified',			#sourceCode : 'setLinks\r"set links for operands in method operator and the result of its execution"',			#stamp : 'YaroslavKormushyn 9/23/2019 15:52',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:04.132812+03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setLinks,			#protocol : #initialization,			#sourceCode : 'setLinks\r"set links for operands in method operator and the result of its execution"',			#stamp : 'YaroslavKormushyn 9/23/2019 15:52',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:04.143812+03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #setLinks,			#protocol : #initialization,			#sourceCode : 'setLinks\r"set links for operands in method operator and the result of its execution"',			#stamp : 'YaroslavKormushyn 10/4/2019 18:01',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:08.707812+03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setUpMenu,			#protocol : #initialization,			#sourceCode : 'setUpMenu\r\tcomposer view\r\t\taddMenu: \'Save\'\r\t\tcallback: [ (RTCanvasExporter canvas: composer view canvas)\r\t\t\t\twithoutFixedShapes;\r\t\t\t\twhole;\r\t\t\t\tscale: 5;\r\t\t\t\toversizedBy: 20 @ 20;\r\t\t\t\tformat: #png;\r\t\t\t\tfileName:\r\t\t\t\t\t((TRPlatform current\r\t\t\t\t\t\tdialogRequest: \'Please enter file name\'\r\t\t\t\t\t\tinitialAnswer: \'export.png\') ifNil: [ ^ nil ]);\r\t\t\t\texport ].\r\tcomposer view addMenu: \'Pause\' callback: [ process suspend ].\r\tcomposer view\r\t\taddMenu: \'Resume\'\r\t\tcallback: [  process resume ].\r\t\t"composer view addMenu: \'Reset\' callback: [ process terminate -> should reset the view and reinit the process and links]"',			#stamp : 'YaroslavKormushyn 9/23/2019 13:39',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setUpMenu,			#protocol : #'as yet unclassified',			#sourceCode : 'setUpMenu\r\tcomposer view\r\t\taddMenu: \'Save\'\r\t\tcallback: [ (RTCanvasExporter canvas: composer view canvas)\r\t\t\t\twithoutFixedShapes;\r\t\t\t\twhole;\r\t\t\t\tscale: 5;\r\t\t\t\toversizedBy: 20 @ 20;\r\t\t\t\tformat: #png;\r\t\t\t\tfileName:\r\t\t\t\t\t((TRPlatform current\r\t\t\t\t\t\tdialogRequest: \'Please enter file name\'\r\t\t\t\t\t\tinitialAnswer: \'export.png\') ifNil: [ ^ nil ]);\r\t\t\t\texport ].\r\tcomposer view addMenu: \'Pause\' callback: [ process suspend ].\r\tcomposer view\r\t\taddMenu: \'Resume\'\r\t\tcallback: [  process resume ].\r\t\t"composer view addMenu: \'Reset\' callback: [ process terminate -> should reset the view and reinit the process and links]"',			#stamp : 'YaroslavKormushyn 9/23/2019 13:39',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:08.819812+03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setUpMenu,			#protocol : #initialization,			#sourceCode : 'setUpMenu\r\tcomposer view\r\t\taddMenu: \'Save\'\r\t\tcallback: [ (RTCanvasExporter canvas: composer view canvas)\r\t\t\t\twithoutFixedShapes;\r\t\t\t\twhole;\r\t\t\t\tscale: 5;\r\t\t\t\toversizedBy: 20 @ 20;\r\t\t\t\tformat: #png;\r\t\t\t\tfileName:\r\t\t\t\t\t((TRPlatform current\r\t\t\t\t\t\tdialogRequest: \'Please enter file name\'\r\t\t\t\t\t\tinitialAnswer: \'export.png\') ifNil: [ ^ nil ]);\r\t\t\t\texport ].\r\tcomposer view addMenu: \'Pause\' callback: [ process suspend ].\r\tcomposer view\r\t\taddMenu: \'Resume\'\r\t\tcallback: [  process resume ].\r\t\t"composer view addMenu: \'Reset\' callback: [ process terminate -> should reset the view and reinit the process and links]"',			#stamp : 'YaroslavKormushyn 9/23/2019 13:39',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:08.834812+03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #setUpMenu,			#protocol : #initialization,			#sourceCode : 'setUpMenu\r\tcomposer view\r\t\taddMenu: \'Save\'\r\t\tcallback: [ (RTCanvasExporter canvas: composer view canvas)\r\t\t\t\twithoutFixedShapes;\r\t\t\t\twhole;\r\t\t\t\tscale: 5;\r\t\t\t\toversizedBy: 20 @ 20;\r\t\t\t\tformat: #png;\r\t\t\t\tfileName:\r\t\t\t\t\t((TRPlatform current\r\t\t\t\t\t\tdialogRequest: \'Please enter file name\'\r\t\t\t\t\t\tinitialAnswer: \'export.png\') ifNil: [ ^ nil ]);\r\t\t\t\texport ].\r\tcomposer view addMenu: \'Pause\' callback: [ process suspend ].\r\tcomposer view\r\t\taddMenu: \'Resume\'\r\t\tcallback: [  process resume ].\r\t\t"composer view addMenu: \'Reset\' callback: [ process terminate -> should reset the view and reinit the process and links]"',			#stamp : 'YaroslavKormushyn 10/4/2019 18:01',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:16.757812+03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setView,			#protocol : #initialization,			#sourceCode : 'setView\roperands keysAndValuesDo: [ :key :value |\r\tself display: value.\r\tcomposer group: key.\r\t ].',			#stamp : 'YaroslavKormushyn 9/23/2019 17:47',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setView,			#protocol : #'as yet unclassified',			#sourceCode : 'setView\roperands keysAndValuesDo: [ :key :value |\r\tself display: value.\r\tcomposer group: key.\r\t ].',			#stamp : 'YaroslavKormushyn 9/23/2019 17:47',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:16.824812+03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #setView,			#protocol : #initialization,			#sourceCode : 'setView\roperands keysAndValuesDo: [ :key :value |\r\tself display: value.\r\tcomposer group: key.\r\t ].',			#stamp : 'YaroslavKormushyn 9/23/2019 17:47',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:16.838812+03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #setView,			#protocol : #initialization,			#sourceCode : 'setView\roperands keysAndValuesDo: [ :key :value |\r\tself display: value.\r\tcomposer group: key.\r\t ].',			#stamp : 'YaroslavKormushyn 10/4/2019 18:01',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:22.769812+03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'show:on:',			#protocol : #'as yet unclassified',			#sourceCode : 'show: operator on: operand\r\toperator isNil | operand isNil\r\t\t| (operand respondsTo: operator asSymbol) not\r\t\tifTrue: [ Error signal: \'What?\' ].\r\toperands := Dictionary newFrom: {(#left -> operand)}.\r\toperation := operator.\r\toperationBlock := [ [ operand perform: operator asSymbol ]\r\t\tensure: [ self unlink ] ].\r\tprocess := operationBlock newProcess.\r\t"[ self setLinks.\r\tprocess resume.\r\tsemaphore wait ] on: Error fork: [ :ex | Error signal: ex ]."\r\tself setUpMenu.\r\t^ composer view',			#stamp : 'YaroslavKormushyn 9/24/2019 11:14',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:22.785812+03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #'show:on:',			#protocol : #'as yet unclassified',			#sourceCode : 'show: operator on: operand\r\toperator isNil | operand isNil\r\t\t| (operand respondsTo: operator asSymbol) not\r\t\tifTrue: [ Error signal: \'What?\' ].\r\toperands := Dictionary newFrom: {(#left -> operand)}.\r\toperation := operator.\r\toperationBlock := [ [ operand perform: operator asSymbol ]\r\t\tensure: [ self unlink ] ].\r\tprocess := operationBlock newProcess.\r\t"[ self setLinks.\r\tprocess resume.\r\tsemaphore wait ] on: Error fork: [ :ex | Error signal: ex ]."\r\tself setUpMenu.\r\t^ composer view',			#stamp : 'YaroslavKormushyn 10/4/2019 18:01',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:26.666812+03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #unlink,			#protocol : #accessing,			#sourceCode : 'unlink\r\tmetaLinks do: [ :link | link uninstall ].',			#stamp : 'YaroslavKormushyn 9/23/2019 15:25',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #unlink,			#protocol : #'as yet unclassified',			#sourceCode : 'unlink\r\tmetaLinks do: [ :link | link uninstall ].',			#stamp : 'YaroslavKormushyn 9/23/2019 15:25',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:26.739812+03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #unlink,			#protocol : #accessing,			#sourceCode : 'unlink\r\tmetaLinks do: [ :link | link uninstall ].',			#stamp : 'YaroslavKormushyn 9/23/2019 15:25',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:01:26.752812+03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #unlink,			#protocol : #accessing,			#sourceCode : 'unlink\r\tmetaLinks do: [ :link | link uninstall ].',			#stamp : 'YaroslavKormushyn 10/4/2019 18:01',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:02:25.739812+03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataOperationVizualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataOperationVizualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataOperationVizualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataOperationVizualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataOperationVizualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataOperationVizualizer\r\tinstanceVariableNames: \'operation operands process operationBlock namedGroups backgroundGroups metaLinks delay semaphore linkMessageConfigs\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataOperationVizualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operation,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operands,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #process,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operationBlock,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #namedGroups,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #backgroundGroups,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #metaLinks,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #delay,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #semaphore,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #linkMessageConfigs,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataOperationVizualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataOperationVizualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataOperationVizualizer,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:02:28.357812+03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataVisualizer\r\tinstanceVariableNames: \'gap elementSize colors shapes operation operands process operationBlock composer namedGroups backgroundGroups metaLinks delay semaphore linkMessageConfigs\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #gap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #colors,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #shapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operation,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operands,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #process,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operationBlock,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #namedGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #backgroundGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #metaLinks,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #delay,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #semaphore,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #linkMessageConfigs,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\rI represent a base class for visualizing a linked data structure and its operations.\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rI can show a unary or a binary operation on a linked data structure given the right initialization.\rI know of the elements of a given data structure and the links between them.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rI use Roassal2 and its main components like RTView, TRCanvas for displaying output.\r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : 'YaroslavKormushyn 9/23/2019 12:03'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataVisualizer\r\tinstanceVariableNames: \'gap elementSize colors shapes composer\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #gap,					#parent : @51				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @51				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #colors,					#parent : @51				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #shapes,					#parent : @51				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @51				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @51			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataVisualizer,					#isMetaSide : false				},				#parent : @51,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\rI represent a base class for visualizing a linked data structure and its operations.\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rI can show a unary or a binary operation on a linked data structure given the right initialization.\rI know of the elements of a given data structure and the links between them.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rI use Roassal2 and its main components like RTView, TRCanvas for displaying output.\r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : 'YaroslavKormushyn 9/23/2019 12:03'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:02:39.329812+03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #accessing,			#sourceCode : 'linkMessages: messageConfigs\r\tmessageConfigs isCollection\r\t\tifFalse: [ Error signal: \'You should add message link configurations to a collection.\' ].\r\tmessageConfigs isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessages := messageConfigs collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 10/4/2019 18:01',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #accessing,			#sourceCode : 'linkMessages: messageConfigs\r\tmessageConfigs isCollection\r\t\tifFalse: [ Error\r\t\t\t\tsignal: \'You should add message link configurations to a collection.\' ].\r\tmessageConfigs isEmpty\r\t\tifTrue: [ Error signal: \'No messages in collection.\' ].\r\tlinkMessageConfigs := messageConfigs collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 10/4/2019 18:02',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:02:59.254812+03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataOperationVizualizer\r\tinstanceVariableNames: \'operation operands process operationBlock namedGroups backgroundGroups metaLinks delay semaphore linkMessageConfigs\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataOperationVizualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operation,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operands,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #process,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operationBlock,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #namedGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #backgroundGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #metaLinks,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #delay,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #semaphore,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #linkMessageConfigs,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataOperationVizualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataOperationVizualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataOperationVizualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataOperationVizualizer\r\tinstanceVariableNames: \'composer operation operands process operationBlock namedGroups backgroundGroups metaLinks delay semaphore linkMessageConfigs\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataOperationVizualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operation,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operands,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #process,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #operationBlock,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #namedGroups,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #backgroundGroups,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #metaLinks,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #delay,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #semaphore,					#parent : @41				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataOperationVizualizer,						#isMetaSide : false					},					#name : #linkMessageConfigs,					#parent : @41				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataOperationVizualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataOperationVizualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @41			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataOperationVizualizer,					#isMetaSide : false				},				#parent : @41,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:06:46.059812+03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \rlinkMessageConfigs := #(#next #previous).\r\tnamedGroups := #(#left #result #right #leftMarker #rightMarker).\r\tbackgroundGroups := #(#left #result #right).',			#stamp : 'YaroslavKormushyn 10/4/2019 18:06',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:06:46.061812+03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \rlinkMessageConfigs := #(#next #previous).\r\tnamedGroups := #(#left #result #right #leftMarker #rightMarker).\r\tbackgroundGroups := #(#left #result #right).',			#stamp : 'YaroslavKormushyn 10/4/2019 18:06',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \rlinkMessageConfigs := #(#next #previous).\r\tnamedGroups := #(#left #result #right #leftMarker #rightMarker).\r\tbackgroundGroups := #(#left #result #right).',			#stamp : 'YaroslavKormushyn 10/4/2019 18:06',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:06:58.976812+03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\t\t\tlinkMessages := #(#next #previous).\r\tnamedGroups := #(#left #result #right #leftMarker #rightMarker).\r\tbackgroundGroups := #(#left #result #right).\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap.\r\tmetaLinks := OrderedCollection new.\r\tsemaphore := Semaphore new.\r\tnamedGroups := {}.\r\tbackgroundGroups := {}.\r\tmetaLinks := OrderedCollection new.\r\tdelay := Delay new.\r\tsemaphore := Semaphore new',			#stamp : 'YaroslavKormushyn 9/24/2019 11:18',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\t\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap.\r\t',			#stamp : 'YaroslavKormushyn 10/4/2019 18:06',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:07:04.816812+03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \rlinkMessageConfigs := #(#next #previous).\r\tnamedGroups := #(#left #result #right #leftMarker #rightMarker).\r\tbackgroundGroups := #(#left #result #right).',			#stamp : 'YaroslavKormushyn 10/4/2019 18:06',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataOperationVizualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tlinkMessageConfigs := #(#next #previous).\r\tnamedGroups := #(#left #result #right #leftMarker #rightMarker).\r\tbackgroundGroups := #(#left #result #right).\r\tmetaLinks := OrderedCollection new.\r\tsemaphore := Semaphore new.\r\tnamedGroups := {}.\r\tbackgroundGroups := {}.\r\tmetaLinks := OrderedCollection new.\r\tdelay := Delay new.\r\tsemaphore := Semaphore new',			#stamp : 'YaroslavKormushyn 10/4/2019 18:07',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:08:15.260812+03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataVisualizer\r\tinstanceVariableNames: \'gap elementSize colors shapes composer\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #gap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #colors,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #shapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\rI represent a base class for visualizing a linked data structure and its operations.\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rI can show a unary or a binary operation on a linked data structure given the right initialization.\rI know of the elements of a given data structure and the links between them.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rI use Roassal2 and its main components like RTView, TRCanvas for displaying output.\r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : 'YaroslavKormushyn 9/23/2019 12:03'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataVisualizer\r\tinstanceVariableNames: \'gap elementSize colors shapes composer linkMessages\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'Object'			},			#name : #LinkedDataVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #gap,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #colors,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #shapes,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #linkMessages,					#parent : @31				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @31			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataVisualizer,					#isMetaSide : false				},				#parent : @31,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\rI represent a base class for visualizing a linked data structure and its operations.\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rI can show a unary or a binary operation on a linked data structure given the right initialization.\rI know of the elements of a given data structure and the links between them.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rI use Roassal2 and its main components like RTView, TRCanvas for displaying output.\r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : 'YaroslavKormushyn 9/23/2019 12:03'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:08:15.375812+03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t|edgeBuilder|\r\tedgeBuilder := shapes at: #edgeBuilder.\r\tedgeBuilder elements: elements.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\tlinkMessages collect: [ :msg | el perform: msg asSymbol ]\r\t\t\tthenReject: [ :res | res isNil ]\r\t\t\t ].',			#stamp : 'YaroslavKormushyn 9/23/2019 18:08',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder |\r\tedgeBuilder := shapes at: #edgeBuilder.\r\tedgeBuilder elements: elements.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\tlinkMessages\r\t\t\t\tcollect: [ :msg | el perform: msg asSymbol ]\r\t\t\t\tthenReject: [ :res | res isNil ] ]',			#stamp : 'YaroslavKormushyn 10/4/2019 18:08',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:08:42.415812+03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\t\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap.\r\t',			#stamp : 'YaroslavKormushyn 10/4/2019 18:06',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\t\t\tlinkMessages = #(#next #previous).\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap',			#stamp : 'YaroslavKormushyn 10/4/2019 18:08',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:08:51.331812+03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\t\t\tlinkMessages = #(#next #previous).\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap',			#stamp : 'YaroslavKormushyn 10/4/2019 18:08',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\tlinkMessages := #(#next #previous).\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap',			#stamp : 'YaroslavKormushyn 10/4/2019 18:08',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:09:43.596812+03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'gap:',			#protocol : #accessing,			#sourceCode : 'gap: gapSize\r\tgap := gapSize',			#stamp : 'YaroslavKormushyn 9/23/2019 13:42',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'gap:',			#protocol : #accessing,			#sourceCode : 'gap: gapSize\r\tgap := gapSize.\r\tcomposer gap: gapSize ',			#stamp : 'YaroslavKormushyn 10/4/2019 18:09',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:10:50.272812+03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getEdgeBuilder,			#protocol : #'as yet unclassified',			#sourceCode : 'getEdgeBuilder\r\t| edgeBuilder |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: composer view.\r\tedgeBuilder shapeBuilder: (shapes at: #edgeBuilder).\r\t^ edgeBuilder',			#stamp : 'YaroslavKormushyn 9/23/2019 15:06',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getEdgeBuilder,			#protocol : #'as yet unclassified',			#sourceCode : 'getEdgeBuilder\r\t| edgeBuilder |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: composer view.\r\tedgeBuilder shapeBuilder: (shapes at: #edgeShapeBuilder).\r\t^ edgeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 18:10',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:11:02.792812+03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\tlinkMessages := #(#next #previous).\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap',			#stamp : 'YaroslavKormushyn 10/4/2019 18:08',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeShapeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\tlinkMessages := #(#next #previous).\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap',			#stamp : 'YaroslavKormushyn 10/4/2019 18:11',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:13:00.322812+03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'LinkedDataOperationVizualizer subclass: #AdditionVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'LinkedDataOperationVizualizer'			},			#name : #AdditionVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'AdditionVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'AdditionVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AdditionVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:13:10.652812+03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'LinkedDataOperationVizualizer subclass: #MultiplicationVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'LinkedDataOperationVizualizer'			},			#name : #MultiplicationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MultiplicationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'MultiplicationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MultiplicationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:17:48.165812+03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'LinkedDataOperationVizualizer subclass: #UnaryOperationVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'LinkedDataOperationVizualizer'			},			#name : #UnaryOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'UnaryOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'UnaryOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #UnaryOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:17:58.845812+03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'LinkedDataOperationVizualizer subclass: #BinaryOperationVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'LinkedDataOperationVizualizer'			},			#name : #BinaryOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'BinaryOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'BinaryOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BinaryOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:18:10.733812+03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'LinkedDataOperationVizualizer subclass: #MultiplicationVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'LinkedDataOperationVizualizer'			},			#name : #MultiplicationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MultiplicationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'MultiplicationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MultiplicationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'BinaryOperationVisualizer subclass: #MultiplicationVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'BinaryOperationVisualizer'			},			#name : #MultiplicationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MultiplicationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'MultiplicationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MultiplicationVisualizer,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:18:14.779812+03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'LinkedDataOperationVizualizer subclass: #AdditionVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'LinkedDataOperationVizualizer'			},			#name : #AdditionVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'AdditionVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'AdditionVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AdditionVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'BinaryOperationVisualizer subclass: #AdditionVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'BinaryOperationVisualizer'			},			#name : #AdditionVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'AdditionVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'AdditionVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AdditionVisualizer,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T18:18:48.520812+03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'UnaryOperationVisualizer subclass: #TranspositionVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual-Core\'',				#superclassName : 'UnaryOperationVisualizer'			},			#name : #TranspositionVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TranspositionVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'TranspositionVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TranspositionVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual-Core,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:02:26.602812+03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getEdgeBuilder,			#protocol : #'as yet unclassified',			#sourceCode : 'getEdgeBuilder\r\t| edgeBuilder |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: composer view.\r\tedgeBuilder shapeBuilder: (shapes at: #edgeShapeBuilder).\r\t^ edgeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 18:10',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getEdgeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getEdgeBuilder\r\t| edgeBuilder |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: composer view.\r\tedgeBuilder shapeBuilder: (shapes at: #edgeShapeBuilder).\r\t^ edgeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 18:10',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:02:32.577812+03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultHeaderElementShape,			#protocol : #'as yet unclassified',			#sourceCode : 'getDefaultHeaderElementShape\r| box valueLabel indexLabel |\r\tbox := RTBox new\r\t\tcolor: (colors at: #header);\r\t\tsize: elementSize.\r\tvalueLabel := RTLabel new\r\t\ttext: \'H\';\r\t\tcolor: (colors at: #label).\r\tindexLabel := RTLabel new\r\t\theight: elementSize / 5;\r\t\ttext: [ :el | el row @ el column ];\r\t\tcolor: (colors at: #label).\r\t^ RTCompositeShape new\r\t\tadd: box;\r\t\tadd: valueLabel;\r\t\tadd: indexLabel translateBy: 0 @ 10.',			#stamp : 'YaroslavKormushyn 9/23/2019 13:54',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultHeaderElementShape,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultHeaderElementShape\r| box valueLabel indexLabel |\r\tbox := RTBox new\r\t\tcolor: (colors at: #header);\r\t\tsize: elementSize.\r\tvalueLabel := RTLabel new\r\t\ttext: \'H\';\r\t\tcolor: (colors at: #label).\r\tindexLabel := RTLabel new\r\t\theight: elementSize / 5;\r\t\ttext: [ :el | el row @ el column ];\r\t\tcolor: (colors at: #label).\r\t^ RTCompositeShape new\r\t\tadd: box;\r\t\tadd: valueLabel;\r\t\tadd: indexLabel translateBy: 0 @ 10.',			#stamp : 'YaroslavKormushyn 9/23/2019 13:54',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:02:32.618812+03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultDataElementShape,			#protocol : #'as yet unclassified',			#sourceCode : 'getDefaultDataElementShape\r\t| box valueLabel indexLabel |\r\tbox := RTBox new\r\t\tcolor: (colors at: #data);\r\t\tsize: elementSize.\r\tvalueLabel := RTLabel new\r\t\ttext: [ :el | \r\t\t\tel value isNil\r\t\t\t\tifTrue: 0\r\t\t\t\tifFalse: [ el value ] ];\r\t\tcolor: (colors at: #label).\r\tindexLabel := RTLabel new\r\t\theight: elementSize / 5;\r\t\ttext: [ :el | \r\t\t\t| row col |\r\t\t\trow := el row.\r\t\t\tcol := el column.\r\t\t\trow isNil\r\t\t\t\tifTrue: [ row := 0 ].\r\t\t\tcol isNil\r\t\t\t\tifTrue: [ col := 0 ].\r\t\t\trow @ col ];\r\t\tcolor: (colors at: #label).\r\t^ RTCompositeShape new\r\t\tadd: box;\r\t\tadd: valueLabel;\r\t\tadd: indexLabel translateBy: 0 @ 10',			#stamp : 'YaroslavKormushyn 9/23/2019 13:50',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultDataElementShape,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultDataElementShape\r\t| box valueLabel indexLabel |\r\tbox := RTBox new\r\t\tcolor: (colors at: #data);\r\t\tsize: elementSize.\r\tvalueLabel := RTLabel new\r\t\ttext: [ :el | \r\t\t\tel value isNil\r\t\t\t\tifTrue: 0\r\t\t\t\tifFalse: [ el value ] ];\r\t\tcolor: (colors at: #label).\r\tindexLabel := RTLabel new\r\t\theight: elementSize / 5;\r\t\ttext: [ :el | \r\t\t\t| row col |\r\t\t\trow := el row.\r\t\t\tcol := el column.\r\t\t\trow isNil\r\t\t\t\tifTrue: [ row := 0 ].\r\t\t\tcol isNil\r\t\t\t\tifTrue: [ col := 0 ].\r\t\t\trow @ col ];\r\t\tcolor: (colors at: #label).\r\t^ RTCompositeShape new\r\t\tadd: box;\r\t\tadd: valueLabel;\r\t\tadd: indexLabel translateBy: 0 @ 10',			#stamp : 'YaroslavKormushyn 9/23/2019 13:50',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:02:32.626812+03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'as yet unclassified',			#sourceCode : 'getDefaultEdgeShapeBuilder\r| shapeBuilder arrowHead arrowTail|\rshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t\t^ shapeBuilder ',			#stamp : 'YaroslavKormushyn 9/23/2019 14:45',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r| shapeBuilder arrowHead arrowTail|\rshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t\t^ shapeBuilder ',			#stamp : 'YaroslavKormushyn 9/23/2019 14:45',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:03:56.160812+03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #'as yet unclassified',			#sourceCode : 'linkMessages: newLinkMessages\rlinkMessages := newLinkMessages collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 10/4/2019 19:03',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:03:56.166812+03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #'as yet unclassified',			#sourceCode : 'linkMessages: newLinkMessages\rlinkMessages := newLinkMessages collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 10/4/2019 19:03',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'linkMessages:',			#protocol : #accessing,			#sourceCode : 'linkMessages: newLinkMessages\rlinkMessages := newLinkMessages collect: [ :msg | msg asSymbol ]',			#stamp : 'YaroslavKormushyn 10/4/2019 19:03',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:04:14.966812+03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #linkMessages,			#protocol : #accessing,			#sourceCode : 'linkMessages\r^ linkMessages',			#stamp : 'YaroslavKormushyn 10/4/2019 19:04',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:05:57.084812+03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'display:',			#protocol : #accessing,			#sourceCode : 'display: linkedStructure\r\t| nodes elements |\r\tlinkedStructure isNil \r\tifTrue: [ ^self ].\r\t(linkedStructure respondsTo: #viewElements)\r\t\tifFalse: [ ^ Error\r\t\t\t\tsignal: \'Container should expose \' , #viewElements asByteString ].\r\tnodes := linkedStructure viewElements.\r\tnodes isNil | nodes isEmpty\r\t\tifTrue: [ ^ self ].\r\telements := (shapes at: #data) elementsOn: nodes.\r\telements @ RTDraggable @ RTPopup.\r\tcomposer view addAll: elements.\r\tRTGridLayout on: elements.\r\tself drawEdgesWith: elements.\r\tself setPositionsFor: elements',			#stamp : 'YaroslavKormushyn 9/24/2019 14:21',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'display:',			#protocol : #accessing,			#sourceCode : 'display: linkedStructure\r\t| nodes elements |\r\tlinkedStructure isNil\r\t\tifTrue: [ ^ self ].\r\t(linkedStructure respondsTo: #viewElements)\r\t\tifFalse: [ ^ Error\r\t\t\t\tsignal: \'Container should expose \' , #viewElements asByteString ].\r\tnodes := linkedStructure viewElements.\r\tnodes isNil | nodes isEmpty\r\t\tifTrue: [ ^ self ].\r\telements := (shapes at: #data) elementsOn: nodes.\r\telements @ RTDraggable @ RTPopup.\r\tcomposer view addAll: elements.\r\tRTGridLayout on: elements.\r\tself drawEdgesWith: elements.\r\tself setPositionsFor: elements.\r\t^ composer view',			#stamp : 'YaroslavKormushyn 10/4/2019 19:05',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:07:43.015812+03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeShapeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\tlinkMessages := #(#next #previous).\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap',			#stamp : 'YaroslavKormushyn 10/4/2019 18:11',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tgap := 35.\r\telementSize := 30.\r\tcolors := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> Color blue).\r\t\t\t(#header -> Color green).\r\t\t\t(#select -> Color red).\r\t\t\t(#highlight -> Color yellow).\r\t\t\t(#label -> Color white)}.\r\tshapes := Dictionary\r\t\tnewFrom:\r\t\t\t{(#data -> self getDefaultDataElementShape).\r\t\t\t(#header -> self getDefaultHeaderElementShape).\r\t\t\t(#edgeBuilder -> self getDefaultEdgeShapeBuilder)}.\r\tlinkMessages := #(#next #previous).\r\tcomposer := RTComposer new.\r\tcomposer view: composer view @ RTZoomableView.\r\tcomposer gap: gap',			#stamp : 'YaroslavKormushyn 10/4/2019 19:07',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:07:59.115812+03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getEdgeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getEdgeBuilder\r\t| edgeBuilder |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: composer view.\r\tedgeBuilder shapeBuilder: (shapes at: #edgeShapeBuilder).\r\t^ edgeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 18:10',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getEdgeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getEdgeBuilder\r\t| edgeBuilder |\r\tedgeBuilder := RTEdgeBuilder new.\r\tedgeBuilder view: composer view.\r\tedgeBuilder shapeBuilder: (shapes at: #edgeBuilder).\r\t^ edgeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:07',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:08:55.136812+03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder |\r\tedgeBuilder := shapes at: #edgeBuilder.\r\tedgeBuilder elements: elements.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\tlinkMessages\r\t\t\t\tcollect: [ :msg | el perform: msg asSymbol ]\r\t\t\t\tthenReject: [ :res | res isNil ] ]',			#stamp : 'YaroslavKormushyn 10/4/2019 18:08',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder |\r\tedgeBuilder := self getEdgeBuilder.\r\tedgeBuilder elements: elements.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\tlinkMessages\r\t\t\t\tcollect: [ :msg | el perform: msg asSymbol ]\r\t\t\t\tthenReject: [ :res | res isNil ] ]',			#stamp : 'YaroslavKormushyn 10/4/2019 19:08',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:15:48.188812+03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder |\r\tedgeBuilder := self getEdgeBuilder.\r\tedgeBuilder elements: elements.\r\tedgeBuilder\r\t\tconnectTo: [ :el | \r\t\t\tlinkMessages\r\t\t\t\tcollect: [ :msg | el perform: msg asSymbol ]\r\t\t\t\tthenReject: [ :res | res isNil ] ]',			#stamp : 'YaroslavKormushyn 10/4/2019 19:08',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #'drawEdgesWith:',			#protocol : #private,			#sourceCode : 'drawEdgesWith: elements\r\t| edgeBuilder |\r\tedgeBuilder := self getEdgeBuilder.\r\tedgeBuilder elements: elements.\r\tedgeBuilder\r\t\tconnectToAll: [ :el | \r\t\t\tlinkMessages\r\t\t\t\tcollect: [ :msg | el perform: msg asSymbol ]\r\t\t\t\tthenReject: [ :res | res isNil ] ]',			#stamp : 'YaroslavKormushyn 10/4/2019 19:15',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:16:53.586812+03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r| shapeBuilder arrowHead arrowTail|\rshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t\t^ shapeBuilder ',			#stamp : 'YaroslavKormushyn 9/23/2019 14:45',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:16',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:17:07.300812+03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoHorizontalLine;\r\t\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:16',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\t"orthoHorizontalLine;\r\t\thorizontalAttachPoint;"\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:17',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:23:15.446812+03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\t"orthoHorizontalLine;\r\t\thorizontalAttachPoint;"\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:17',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"orthoHorizontalLine;\r\t\thorizontalAttachPoint;"\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:23',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:23:32.296812+03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\thorizontalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"orthoHorizontalLine;\r\t\thorizontalAttachPoint;"\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:23',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"orthoHorizontalLine;\r\t\thorizontalAttachPoint;"\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:23',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:24:45.418812+03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"orthoHorizontalLine;\r\t\thorizontalAttachPoint;"\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:23',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\tshortestDistanceAttachPoint ;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"orthoHorizontalLine;\r\t\thorizontalAttachPoint;"\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:24',			#package : #LNU-LinkedData-Visual		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T19:25:15.037812+03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\tshortestDistanceAttachPoint ;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t"orthoHorizontalLine;\r\t\thorizontalAttachPoint;"\r\t"arrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\torthoVerticalLine;\r\t\tverticalAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black."\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:24',			#package : #LNU-LinkedData-Visual		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedDataVisualizer,				#isMetaSide : false			},			#name : #getDefaultEdgeShapeBuilder,			#protocol : #'generate - shapes',			#sourceCode : 'getDefaultEdgeShapeBuilder\r\t| shapeBuilder arrowHead arrowTail |\r\tshapeBuilder := RTShapeBuilder new.\r\tarrowHead := RTSimpleArrow asHead\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tarrowTail := RTSimpleArrow asTail\r\t\tsize: 1;\r\t\tbaseSize: 3.\r\tshapeBuilder styledLine\r\t\tshortestDistanceAttachPoint;\r\t\thead: arrowHead;\r\t\ttail: arrowTail;\r\t\tcolor: Color black.\r\t^ shapeBuilder',			#stamp : 'YaroslavKormushyn 10/4/2019 19:25',			#package : #LNU-LinkedData-Visual		}	}}