OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:12:58.717161+03:00' ],		#prior : OmReference [ 'Pharo7.0.3-0-32bit-0903ade.1obzutqu3dn5nn2akgw3weylw', '35' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #LNU-LinkedData-Visual,		#affectedPackageName : #LNU-LinkedData-Visual	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:12:58.807161+03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-LinkedData-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkMessageConfig\r\tinstanceVariableNames: \'command commandBlock control instance linkType when operControls varControls\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual\'',				#superclassName : 'Object'			},			#name : #LinkMessageConfig,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #command,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #commandBlock,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #control,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #instance,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #linkType,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #when,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #operControls,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #varControls,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkMessageConfig class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkMessageConfig class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkMessageConfig,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:13:01.727161+03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-LinkedData-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkType\r\tinstanceVariableNames: \'value\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual\'',				#superclassName : 'Object'			},			#name : #LinkType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkType,						#isMetaSide : false					},					#name : #value,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkType class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkType,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\rI represent an enum of permitted link types for LinkedDataVizualizer.\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tvalue:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'YaroslavKormushyn 9/24/2019 17:39'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:13:04.253161+03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-LinkedData-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataVisualizer\r\tinstanceVariableNames: \'gap elementSize colors shapes operation operands process operationBlock composer namedGroups backgroundGroups metaLinks delay semaphore linkMessageConfigs\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual\'',				#superclassName : 'Object'			},			#name : #LinkedDataVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #gap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #colors,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #shapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operation,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operands,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #process,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operationBlock,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #namedGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #backgroundGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #metaLinks,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #delay,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #semaphore,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #linkMessageConfigs,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\rI represent a base class for visualizing a linked data structure and its operations.\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rI can show a unary or a binary operation on a linked data structure given the right initialization.\rI know of the elements of a given data structure and the links between them.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rI use Roassal2 and its main components like RTView, TRCanvas for displaying output.\r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : 'YaroslavKormushyn 9/23/2019 12:03'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:16.834161+03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'SequenceableCollection subclass: #LinkedList\r\tinstanceVariableNames: \'firstLink lastLink\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Collections-Sequenceable-Base\'',				#superclassName : 'SequenceableCollection'			},			#name : #LinkedList,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedList,						#isMetaSide : false					},					#name : #firstLink,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedList,						#isMetaSide : false					},					#name : #lastLink,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedList class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedList class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedList,					#isMetaSide : false				},				#parent : @7,				#content : 'I am a sequential collection where adjecent objects are linked.\r\rDescription\r-------------------\rI can store any kind of objects that I will wrap into a Link (See implementation points).\rI act pretty much as an OrderedCollection, but my access times differs: the method #atIndex: is depending of the number of elements so is not constant. In the worse case, the whole list must be crossed.\rUsing the message #addFirst: / #removeLast causes the receiver to behave as a stack; using #addLast: / #removeFirst causes the receiver to behave as a queue.\r\rI use the Link class (or his subclasses) in my implementation. \r\rPublic API and Key Messages\r-------------------\r\r- #new / #withAll: aCollection / #with: anObject \tare common constructors\r\r- #add: anObject / #at: anIndex put: anObject \tallow to add new elements to myself.\r\r- #remove: anObject \tallow to remove an element.\r\t\r- #do: aBlock / #collect: aBlock / #select: aBlock / #reject: aBlock \tare common iterators.\r\rExample \r-------------------\r\r \t"There is many ways to create a LinkedList, here are some:"\r\tlinkedList := LinkedList new.\r\tlinkedList\r\t\tadd: \'one\';\r\t\tadd: \'two\';\r\t\taddFirst: \'zero\';\r\t\taddLast: \'three\'.\r\tlinkedList.\t\t"returns: a LinkedList(\'zero\' \'one\' \'two\' \'three\')"\r\r\t"or"\r\tlinkedList := LinkedList with: \'one\' with: \'two\' with: \'three\'.\r\tlinkedList.\t\t"returns: a LinkedList(\'one\' \'two\' \'three\')"\r\r\t"or from an other collection (here an Array)"\r\tlinkedList := LinkedList withAll: #(\'one\' \'two\' \'three\').\r\tlinkedList.\t\t"returns: a LinkedList(\'one\' \'two\' \'three\')"\r\r\t"Some manipulations"\r\tlinkedList := LinkedList new.\r\tlinkedList\r\t\tadd: 1;\r\t\tadd: 2.\r\tlinkedList.\t\t"returns: a LinkedList(1 2)"\r\tlinkedList remove: 1.\r\tlinkedList.\t\t"returns: a LinkedList(2)"\r\r\t"A last one"\r\tlinkedList := LinkedList with: $b with: $c with: $a.\r\tlinkedList sort: [ :first :second | first < second ].\t\t\t"returns: a LinkedList($a $b $c)"\r\tlinkedList collect: [ :element | element asUppercase ].\t"returns:  a LinkedList($A $B $C)"\r\tlinkedList select: [ :element | element >= $b ].\t\t\t"returns:  a LinkedList($b $c)"\r\tlinkedList do: [ :element | element inspect ].\r\tlinkedList asArray\t\t\t\t\t\t\t\t\t"returns: #($a $b $c)"\r\t\t\t\rInternal Representation and Key Implementation Points.\r-------------------\r\r    Instance Variables\r\tfirstLink:\t\t <Link> \tA link that contains the first value of the LinkedList.\r\tlastLink:\t\t <Link> \tA link that contains the last value of the LinkedList.\r\rIf you attempt to add any object into a LinkedList that is not a Link, it will automatically be wrapped by a ValueLink.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Collections-Sequenceable-Base,			#package : #Collections-Sequenceable,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:16.854161+03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedList,				#isMetaSide : false			},			#name : #'linksCollect:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'linksCollect: aBlock\r\t| aLink newCollection|\r\taLink := firstLink.\r\tnewCollection := self class new.\r\t[ aLink == nil ]\r\t\twhileFalse: [ newCollection add: (aBlock value: aLink).\r\t\t\taLink := aLink nextLink ].\r\t^ newCollection',			#stamp : 'YaroslavKormushyn 5/5/2019 21:31',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedList,				#isMetaSide : false			},			#name : #'linksCollect:',			#protocol : #'*LNU-SparseMatrix-Extensions',			#sourceCode : 'linksCollect: aBlock\r\t| aLink newCollection|\r\taLink := firstLink.\r\tnewCollection := self class new.\r\t[ aLink == nil ]\r\t\twhileFalse: [ newCollection add: (aBlock value: aLink).\r\t\t\taLink := aLink nextLink ].\r\t^ newCollection',			#stamp : 'YaroslavKormushyn 5/5/2019 21:31',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:29.865161+03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpCategoryAddition {		#classCategoryName : #LNU-SparseMatrix-Extensions,		#affectedPackageName : #LNU-SparseMatrix-Extensions	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:29.956161+03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Trachel-Shapes,		#newCategory : #LNU-SparseMatrix-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'TRShape subclass: #TRCompositeShape\r\tinstanceVariableNames: \'shapeAndOffsets\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'TRShape'			},			#name : #TRCompositeShape,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCompositeShape,						#isMetaSide : false					},					#name : #shapeAndOffsets,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TRCompositeShape class\r\tinstanceVariableNames: \'\''				},				#name : #'TRCompositeShape class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TRCompositeShape,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:29.967161+03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Roassal2-Core-Shapes,		#newCategory : #LNU-SparseMatrix-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTShape subclass: #RTAbstractLine\r\tinstanceVariableNames: \'width attachPoint allowSelfLoop\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTShape'			},			#name : #RTAbstractLine,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #width,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #attachPoint,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #allowSelfLoop,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTAbstractLine class\r\tinstanceVariableNames: \'\''				},				#name : #'RTAbstractLine class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTAbstractLine,					#isMetaSide : false				},				#parent : @7,				#content : 'All  my subclasses describes a line shape',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:29.972161+03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Roassal2-Core-Shapes,		#newCategory : #LNU-SparseMatrix-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAbstractLine subclass: #RTMultiLine\r\tinstanceVariableNames: \'blockProducingPath\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTAbstractLine'			},			#name : #RTMultiLine,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTMultiLine,						#isMetaSide : false					},					#name : #blockProducingPath,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTMultiLine class\r\tinstanceVariableNames: \'\''				},				#name : #'RTMultiLine class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTMultiLine,					#isMetaSide : false				},				#parent : @7,				#content : 'A RTMultiLine represents \r\rInstance Variables\r\tblockProducingPath:\t\t<Block>   a two arg block that produces the path. The block has to return the collection of points\r\rblockProducingPath\r\t- xxxxx\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:30.064161+03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Roassal2-Builder-Composer,		#newCategory : #LNU-SparseMatrix-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTObject subclass: #RTComposer\r\tinstanceVariableNames: \'stack view gap mapping groups backgrounds names\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTObject'			},			#name : #RTComposer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #stack,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #view,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #gap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #mapping,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #groups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #backgrounds,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #names,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTComposer class\r\tinstanceVariableNames: \'\''				},				#name : #'RTComposer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTComposer,					#isMetaSide : false				},				#parent : @7,				#content : 'I am responsible to compose several visualizations.\r\rFor example:\r====\rcompo := RTComposer new.\r\rb := RTMondrian new.\rb view: compo view.\rb nodes: (1 to: 3).\rb build.\rcompo group: #g1.\r\rb := RTMondrian new.\rb view: compo view.\rb nodes: (1 to: 4).\rb build.\r\rcompo group: #g2.\r\rcompo layout: RTVerticalLineLayout new alignCenter. \rcompo view\r====',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:30.170161+03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Roassal2-Builder-Common,		#newCategory : #LNU-SparseMatrix-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAbstractBuilder subclass: #RTShapeBuilder\r\tinstanceVariableNames: \'shape createdElements shapeInitializer\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTAbstractBuilder'			},			#name : #RTShapeBuilder,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #shape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #createdElements,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #shapeInitializer,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTShapeBuilder class\r\tinstanceVariableNames: \'\''				},				#name : #'RTShapeBuilder class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTShapeBuilder,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:30.178161+03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Roassal2-Core-Base,		#newCategory : #LNU-SparseMatrix-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAnnounceableObject subclass: #RTShapedObject\r\tinstanceVariableNames: \'isFixed model shape trachelShape view\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTAnnounceableObject'			},			#name : #RTShapedObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #isFixed,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #model,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #shape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #trachelShape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #view,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTShapedObject class\r\tinstanceVariableNames: \'\''				},				#name : #'RTShapedObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTShapedObject,					#isMetaSide : false				},				#parent : @7,				#content : 'A RTShapedObject is the super class of RTElement and RTEdge. A RTShapeObject has the ability to keep attributes, and receive a shape. This is an abstract class, it is not meant to be instantiated.\r\rInstance Variables\r\tattributes:\t\t<Object>\r\tisFixed:\t\t<Object>\r\tmodel:\t\t<Object>\r\tshape:\t\t<Object>\r\ttrachelShape:\t\t<Object>\r\tview:\t\t<Object>\r\rattributes\r\t- xxxxx\r\risFixed\r\t- xxxxx\r\rmodel\r\t- xxxxx\r\rshape\r\t- xxxxx\r\rtrachelShape\r\t- xxxxx\r\rview\r\t- xxxxx\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:30.184161+03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Trachel-Core,		#newCategory : #LNU-SparseMatrix-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'TRCallableObject subclass: #TRCanvas\r\tinstanceVariableNames: \'canvas shapes fixedShapes extent animations morph camera announcer color session eventOverseer theme clearBackground\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'TRCallableObject'			},			#name : #TRCanvas,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #canvas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #shapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #fixedShapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #extent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #animations,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #morph,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #camera,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #announcer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #session,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #eventOverseer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #theme,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #clearBackground,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TRCanvas class\r\tinstanceVariableNames: \'\''				},				#name : #'TRCanvas class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TRCanvas,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:53.903161+03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withHorizontalRightAttachPoint,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: attach point"\rwithHorizontalRightAttachPoint\r\t| ap |\r\tap := RTHorizontalRightAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withHorizontalRightAttachPoint,			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: attach point"\rwithHorizontalRightAttachPoint\r\t| ap |\r\tap := RTHorizontalRightAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:53.907161+03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTShape subclass: #RTAbstractLine\r\tinstanceVariableNames: \'width attachPoint allowSelfLoop\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTShape'			},			#name : #RTAbstractLine,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #width,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #attachPoint,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #allowSelfLoop,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTAbstractLine class\r\tinstanceVariableNames: \'\''				},				#name : #'RTAbstractLine class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTAbstractLine,					#isMetaSide : false				},				#parent : @7,				#content : 'All  my subclasses describes a line shape',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:14:53.950161+03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withVerticalBottomAttachPoint,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: attach point"\rwithVerticalBottomAttachPoint\r\t| ap |\r\tap := RTVerticalBottomAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withVerticalBottomAttachPoint,			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: attach point"\rwithVerticalBottomAttachPoint\r\t| ap |\r\tap := RTVerticalBottomAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.388161+03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModel:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightModel: model\r\t[ (view elementFromModel: model)\r\t\tcolor: Color yellow ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModel:',			#protocol : #'as yet unclassified',			#sourceCode : 'highlightModel: model\r\t[ (view elementFromModel: model)\r\t\tcolor: Color yellow ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.395161+03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'hasGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'hasGroup: groupId\r\t"returns whether a group under groupId exists in the mapping"\r\r\t^ mapping includesKey: groupId',			#stamp : 'YaroslavKormushyn 5/6/2019 16:04',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'hasGroup:',			#protocol : #'as yet unclassified',			#sourceCode : 'hasGroup: groupId\r\t"returns whether a group under groupId exists in the mapping"\r\r\t^ mapping includesKey: groupId',			#stamp : 'YaroslavKormushyn 5/6/2019 16:04',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.400161+03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModel:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectModel: model\r\t[ (view elementFromModel: model) color: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | \r\t\t\tnil.].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModel:',			#protocol : #'as yet unclassified',			#sourceCode : 'selectModel: model\r\t[ (view elementFromModel: model) color: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | \r\t\t\tnil.].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.406161+03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectUsing:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectUsing: aBlock inGroup: groupName\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color red ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:08',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectUsing:inGroup:',			#protocol : #'as yet unclassified',			#sourceCode : 'selectUsing: aBlock inGroup: groupName\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color red ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:08',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.411161+03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'replaceGroup:with:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'replaceGroup: groupName with: elements\r\tself removeGroup: groupName.\r\tself view addAll: elements.\r\tself group: groupName.\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 22:33',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'replaceGroup:with:',			#protocol : #'as yet unclassified',			#sourceCode : 'replaceGroup: groupName with: elements\r\tself removeGroup: groupName.\r\tself view addAll: elements.\r\tself group: groupName.\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 22:33',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.417161+03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightUsing:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightUsing: aBlock inGroup: groupName\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color yellow ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:08',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightUsing:inGroup:',			#protocol : #'as yet unclassified',			#sourceCode : 'highlightUsing: aBlock inGroup: groupName\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color yellow ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:08',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.422161+03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'move:between:and:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'move: name1 between: name2 and: name3\r\t| g1 g2 g3 |\r\tg1 := self groupWithoutNest: (mapping at: name1).\r\tg2 := self groupWithoutNest: (mapping at: name2).\r\tg3 := self groupWithoutNest: (mapping at: name3).\r\tTRConstraint move: g1 between: g2 and: g3',			#stamp : 'YaroslavKormushyn 5/5/2019 23:02',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'move:between:and:',			#protocol : #'as yet unclassified',			#sourceCode : 'move: name1 between: name2 and: name3\r\t| g1 g2 g3 |\r\tg1 := self groupWithoutNest: (mapping at: name1).\r\tg2 := self groupWithoutNest: (mapping at: name2).\r\tg3 := self groupWithoutNest: (mapping at: name3).\r\tTRConstraint move: g1 between: g2 and: g3',			#stamp : 'YaroslavKormushyn 5/5/2019 23:02',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.428161+03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawNamesFor:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'redrawNamesFor: groupNames\r\tself removeAllNames.\r\tgroupNames do: [ :name | self nameGroup: name as: name asString ].\r\t(mapping includesKey: #labels)\r\t\tifTrue: [ self groupToExisting: #labels ]\r\t\tifFalse: [ self group: #labels ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawNamesFor:',			#protocol : #'as yet unclassified',			#sourceCode : 'redrawNamesFor: groupNames\r\tself removeAllNames.\r\tgroupNames do: [ :name | self nameGroup: name as: name asString ].\r\t(mapping includesKey: #labels)\r\t\tifTrue: [ self groupToExisting: #labels ]\r\t\tifFalse: [ self group: #labels ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.433161+03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawNamesAndBackgroundsFor:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'redrawNamesAndBackgroundsFor: groupNames\r\tself\r\t\tremoveAllBackgrounds;\r\t\tremoveAllNames.\r\tgroupNames\r\t\tdo: [ :name | \r\t\t\tself setBackgroundColor: (Color gray alpha: 0.2) forGroup: name.\r\t\t\tself nameGroup: name as: name asString ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawNamesAndBackgroundsFor:',			#protocol : #'as yet unclassified',			#sourceCode : 'redrawNamesAndBackgroundsFor: groupNames\r\tself\r\t\tremoveAllBackgrounds;\r\t\tremoveAllNames.\r\tgroupNames\r\t\tdo: [ :name | \r\t\t\tself setBackgroundColor: (Color gray alpha: 0.2) forGroup: name.\r\t\t\tself nameGroup: name as: name asString ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.440161+03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectUsing:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectUsing: aBlock\r\t"deselect all elements for which models aBlock answers true"\r\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color blue ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:49',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectUsing:',			#protocol : #'as yet unclassified',			#sourceCode : 'deselectUsing: aBlock\r\t"deselect all elements for which models aBlock answers true"\r\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color blue ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:49',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.444161+03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModels:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectModels: modelCollection\r\tmodelCollection do: [ :model | \r\t\t[ (self view elementFromModel: model) color: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ]]. \r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModels:',			#protocol : #'as yet unclassified',			#sourceCode : 'selectModels: modelCollection\r\tmodelCollection do: [ :model | \r\t\t[ (self view elementFromModel: model) color: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ]]. \r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.450161+03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModel:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectModel: model\r\t[ (view elementFromModel: model) color: Color blue ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModel:',			#protocol : #'as yet unclassified',			#sourceCode : 'deselectModel: model\r\t[ (view elementFromModel: model) color: Color blue ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.455161+03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModel:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model) color: Color blue ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModel:inGroup:',			#protocol : #'as yet unclassified',			#sourceCode : 'deselectModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model) color: Color blue ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.461161+03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightUsing:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightUsing: aBlock\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color yellow ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:49',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightUsing:',			#protocol : #'as yet unclassified',			#sourceCode : 'highlightUsing: aBlock\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color yellow ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:49',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.466161+03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectUsing:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectUsing: aBlock inGroup: groupName\r\t"deselect all elements for which models aBlock answers true"\r\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color blue ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:07',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectUsing:inGroup:',			#protocol : #'as yet unclassified',			#sourceCode : 'deselectUsing: aBlock inGroup: groupName\r\t"deselect all elements for which models aBlock answers true"\r\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color blue ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:07',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.470161+03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectUsing:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectUsing: aBlock\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\t\tthenDo: [ :el | el color: Color red ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:48',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectUsing:',			#protocol : #'as yet unclassified',			#sourceCode : 'selectUsing: aBlock\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\t\tthenDo: [ :el | el color: Color red ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:48',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.476161+03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'groupToExisting:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'groupToExisting: aName\r\t"Add to existing group any new elements added to the view"\r\r\t| newGroup existingGroup |\r\tnewGroup := self newElementsAsGroup.\r\texistingGroup := [mapping at: aName] on: KeyNotFound do: [ KeyNotFound signal: \'No group with \', aName, \' was found\' ].\r\texistingGroup addAll: newGroup elements',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'groupToExisting:',			#protocol : #'as yet unclassified',			#sourceCode : 'groupToExisting: aName\r\t"Add to existing group any new elements added to the view"\r\r\t| newGroup existingGroup |\r\tnewGroup := self newElementsAsGroup.\r\texistingGroup := [mapping at: aName] on: KeyNotFound do: [ KeyNotFound signal: \'No group with \', aName, \' was found\' ].\r\texistingGroup addAll: newGroup elements',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.481161+03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModel:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model)\r\t\tcolor: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModel:inGroup:',			#protocol : #'as yet unclassified',			#sourceCode : 'selectModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model)\r\t\tcolor: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.487161+03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModels:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightModels: modelCollection\r\tmodelCollection\r\t\tdo: [ :model | \r\t\t\t[ (view elementFromModel: model) color: Color yellow ]\r\t\t\t\ton: Error\r\t\t\t\tdo: [ :exception | nil ] ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModels:',			#protocol : #'as yet unclassified',			#sourceCode : 'highlightModels: modelCollection\r\tmodelCollection\r\t\tdo: [ :model | \r\t\t\t[ (view elementFromModel: model) color: Color yellow ]\r\t\t\t\ton: Error\r\t\t\t\tdo: [ :exception | nil ] ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.492161+03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModel:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model) color: Color yellow ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModel:inGroup:',			#protocol : #'as yet unclassified',			#sourceCode : 'highlightModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model) color: Color yellow ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.497161+03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawBackgroundsFor:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'redrawBackgroundsFor: groupNames\r\tself removeAllBackgrounds.\r\tgroupNames\r\t\tdo:\r\t\t\t[ :name | self setBackgroundColor: (Color gray alpha: 0.2) forGroup: name ].\r\t\t(mapping includesKey: #labels)\r\t\tifTrue: [ self groupToExisting: #labels ]\r\t\tifFalse: [ self group: #labels ]\r\t',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawBackgroundsFor:',			#protocol : #'as yet unclassified',			#sourceCode : 'redrawBackgroundsFor: groupNames\r\tself removeAllBackgrounds.\r\tgroupNames\r\t\tdo:\r\t\t\t[ :name | self setBackgroundColor: (Color gray alpha: 0.2) forGroup: name ].\r\t\t(mapping includesKey: #labels)\r\t\tifTrue: [ self groupToExisting: #labels ]\r\t\tifFalse: [ self group: #labels ]\r\t',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.502161+03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModels:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectModels: modelCollection\r\tmodelCollection\r\t\tdo: [ :model | \r\t\t\t[ (self view elementFromModel: model) color: Color blue ]\r\t\t\t\ton: Error\r\t\t\t\tdo: [ :exception | nil ] ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModels:',			#protocol : #'as yet unclassified',			#sourceCode : 'deselectModels: modelCollection\r\tmodelCollection\r\t\tdo: [ :model | \r\t\t\t[ (self view elementFromModel: model) color: Color blue ]\r\t\t\t\ton: Error\r\t\t\t\tdo: [ :exception | nil ] ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.504161+03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTObject subclass: #RTComposer\r\tinstanceVariableNames: \'stack view gap mapping groups backgrounds names\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTObject'			},			#name : #RTComposer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #stack,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #view,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #gap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #mapping,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #groups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #backgrounds,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #names,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTComposer class\r\tinstanceVariableNames: \'\''				},				#name : #'RTComposer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTComposer,					#isMetaSide : false				},				#parent : @7,				#content : 'I am responsible to compose several visualizations.\r\rFor example:\r====\rcompo := RTComposer new.\r\rb := RTMondrian new.\rb view: compo view.\rb nodes: (1 to: 3).\rb build.\rcompo group: #g1.\r\rb := RTMondrian new.\rb view: compo view.\rb nodes: (1 to: 4).\rb build.\r\rcompo group: #g2.\r\rcompo layout: RTVerticalLineLayout new alignCenter. \rcompo view\r====',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:00.549161+03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'replaceElementsInGroup:with:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'replaceElementsInGroup: groupName with: matrix\r\tself removeGroup: groupName.\r\tMatrixVisualizer on: matrix withView: view.\r\tself group: groupName.\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'replaceElementsInGroup:with:',			#protocol : #'as yet unclassified',			#sourceCode : 'replaceElementsInGroup: groupName with: matrix\r\tself removeGroup: groupName.\r\tMatrixVisualizer on: matrix withView: view.\r\tself group: groupName.\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:05.791161+03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalancedToBottomWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalancedToBottomWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := { toPoint x . fromPoint x } max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalancedToBottomWithOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalancedToBottomWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := { toPoint x . fromPoint x } max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:05.797161+03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:withOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\t offset = Number to add to x"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:withOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\t offset = Number to add to x"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:05.802161+03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalancedToRightWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'orthoVerticalBalancedToRightWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := {toPoint y.\r\t\t\tfromPoint y} max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalancedToRightWithOffset:',			#protocol : #'as yet unclassified',			#sourceCode : 'orthoVerticalBalancedToRightWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := {toPoint y.\r\t\t\tfromPoint y} max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:05.804161+03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAbstractLine subclass: #RTMultiLine\r\tinstanceVariableNames: \'blockProducingPath\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTAbstractLine'			},			#name : #RTMultiLine,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTMultiLine,						#isMetaSide : false					},					#name : #blockProducingPath,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTMultiLine class\r\tinstanceVariableNames: \'\''				},				#name : #'RTMultiLine class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTMultiLine,					#isMetaSide : false				},				#parent : @7,				#content : 'A RTMultiLine represents \r\rInstance Variables\r\tblockProducingPath:\t\t<Block>   a two arg block that produces the path. The block has to return the collection of points\r\rblockProducingPath\r\t- xxxxx\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:05.848161+03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:withOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: public - configuration"\rorthoVerticalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\toffset = Number to add to mid y"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:withOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - configuration"\rorthoVerticalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\toffset = Number to add to mid y"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:22.985161+03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineBottommostWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineBottommostWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new withHorizontalAttachPoint; orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineBottommostWithOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineBottommostWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new withHorizontalAttachPoint; orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:22.993161+03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoVerticalLineRightmostWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: as yet unclassified"\rorthoVerticalLineRightmostWithOffset: offset\r\t^ self\r\t\tshape:\r\t\t\t(RTStyledMultiLine new\r\t\t\t\twithVerticallAttachPoint;\r\t\t\t\torthoVerticalBalancedToRightWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoVerticalLineRightmostWithOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: as yet unclassified"\rorthoVerticalLineRightmostWithOffset: offset\r\t^ self\r\t\tshape:\r\t\t\t(RTStyledMultiLine new\r\t\t\t\twithVerticallAttachPoint;\r\t\t\t\torthoVerticalBalancedToRightWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:22.998161+03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #verticalBottomAttachPoint,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: shape - attach point on edges"\rverticalBottomAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withVerticalBottomAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #verticalBottomAttachPoint,			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: shape - attach point on edges"\rverticalBottomAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withVerticalBottomAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:23.005161+03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineWithOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:23.007161+03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAbstractBuilder subclass: #RTShapeBuilder\r\tinstanceVariableNames: \'shape createdElements shapeInitializer\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTAbstractBuilder'			},			#name : #RTShapeBuilder,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #shape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #createdElements,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #shapeInitializer,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTShapeBuilder class\r\tinstanceVariableNames: \'\''				},				#name : #'RTShapeBuilder class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTShapeBuilder,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:23.053161+03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #horizontalRightAttachPoint,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: shape - attach point on edges"\rhorizontalRightAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withHorizontalRightAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #horizontalRightAttachPoint,			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: shape - attach point on edges"\rhorizontalRightAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withHorizontalRightAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:28.216161+03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAnnounceableObject subclass: #RTShapedObject\r\tinstanceVariableNames: \'isFixed model shape trachelShape view\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTAnnounceableObject'			},			#name : #RTShapedObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #isFixed,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #model,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #shape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #trachelShape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #view,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTShapedObject class\r\tinstanceVariableNames: \'\''				},				#name : #'RTShapedObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTShapedObject,					#isMetaSide : false				},				#parent : @7,				#content : 'A RTShapedObject is the super class of RTElement and RTEdge. A RTShapeObject has the ability to keep attributes, and receive a shape. This is an abstract class, it is not meant to be instantiated.\r\rInstance Variables\r\tattributes:\t\t<Object>\r\tisFixed:\t\t<Object>\r\tmodel:\t\t<Object>\r\tshape:\t\t<Object>\r\ttrachelShape:\t\t<Object>\r\tview:\t\t<Object>\r\rattributes\r\t- xxxxx\r\risFixed\r\t- xxxxx\r\rmodel\r\t- xxxxx\r\rshape\r\t- xxxxx\r\rtrachelShape\r\t- xxxxx\r\rview\r\t- xxxxx\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:28.233161+03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapedObject,				#isMetaSide : false			},			#name : #'updateModelAndRedraw:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'updateModelAndRedraw: anObject\r\t"anObject could be any Smalltalk object. Shapes are computed based on that object"\r\r\tself model: anObject.\r\tself update.\r\tself trachelShape relayoutRelative',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapedObject,				#isMetaSide : false			},			#name : #'updateModelAndRedraw:',			#protocol : #'as yet unclassified',			#sourceCode : 'updateModelAndRedraw: anObject\r\t"anObject could be any Smalltalk object. Shapes are computed based on that object"\r\r\tself model: anObject.\r\tself update.\r\tself trachelShape relayoutRelative',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:32.688161+03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'TRCallableObject subclass: #TRCanvas\r\tinstanceVariableNames: \'canvas shapes fixedShapes extent animations morph camera announcer color session eventOverseer theme clearBackground\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'TRCallableObject'			},			#name : #TRCanvas,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #canvas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #shapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #fixedShapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #extent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #animations,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #morph,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #camera,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #announcer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #session,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #eventOverseer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #theme,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #clearBackground,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TRCanvas class\r\tinstanceVariableNames: \'\''				},				#name : #'TRCanvas class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TRCanvas,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:32.704161+03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TRCanvas,				#isMetaSide : false			},			#name : #focusOnCenterScaled,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'focusOnCenterScaled\r\t^ self camera focusOnCenterScaled: self extent * 0.9',			#stamp : 'CompatibleUserName 9/20/2019 15:05:29',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TRCanvas,				#isMetaSide : false			},			#name : #focusOnCenterScaled,			#protocol : #'as yet unclassified',			#sourceCode : 'focusOnCenterScaled\r\t^ self camera focusOnCenterScaled: self extent * 0.9',			#stamp : 'CompatibleUserName 9/20/2019 15:05:29',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:38.711161+03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'TRShape subclass: #TRCompositeShape\r\tinstanceVariableNames: \'shapeAndOffsets\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'TRShape'			},			#name : #TRCompositeShape,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCompositeShape,						#isMetaSide : false					},					#name : #shapeAndOffsets,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TRCompositeShape class\r\tinstanceVariableNames: \'\''				},				#name : #'TRCompositeShape class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TRCompositeShape,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:15:38.723161+03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TRCompositeShape,				#isMetaSide : false			},			#name : #relayoutRelative,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'relayoutRelative\r\t"This methods places the contained shapes according to the specified layout"\r\r\t| first |\r\tfirst := self firstShape.\r\tshapeAndOffsets\r\t\tdo: [ :shapeAndOffset | \r\t\t\tshapeAndOffset first\r\t\t\t\ttranslateBy: shapeAndOffset second ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TRCompositeShape,				#isMetaSide : false			},			#name : #relayoutRelative,			#protocol : #'as yet unclassified',			#sourceCode : 'relayoutRelative\r\t"This methods places the contained shapes according to the specified layout"\r\r\t| first |\r\tfirst := self firstShape.\r\tshapeAndOffsets\r\t\tdo: [ :shapeAndOffset | \r\t\t\tshapeAndOffset first\r\t\t\t\ttranslateBy: shapeAndOffset second ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:15.011161+03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalancedToBottomWithOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalancedToBottomWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := { toPoint x . fromPoint x } max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:15.059161+03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:withOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\t offset = Number to add to x"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:15.097161+03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalancedToRightWithOffset:',			#protocol : #'as yet unclassified',			#sourceCode : 'orthoVerticalBalancedToRightWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := {toPoint y.\r\t\t\tfromPoint y} max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:15.136161+03:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:withOffset:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - configuration"\rorthoVerticalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\toffset = Number to add to mid y"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:46.794161+03:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #orthoHorizontal,			#protocol : #'public - configuration',			#sourceCode : 'orthoHorizontal\r\tself orthoHorizontalBalanceTo: 0.5',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #orthoHorizontal,			#protocol : #'as yet unclassified',			#sourceCode : 'orthoHorizontal\r\tself orthoHorizontalBalanceTo: 0.5',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:46.802161+03:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #orthoHorizontal,			#protocol : #'public - configuration',			#sourceCode : 'orthoHorizontal\r\tself orthoHorizontalBalanceTo: 0.5',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:46.841161+03:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:',			#protocol : #'public - configuration',			#sourceCode : 'orthoVerticalBalanceTo: balance\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)).\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:',			#protocol : #'as yet unclassified',			#sourceCode : 'orthoVerticalBalanceTo: balance\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)).\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:46.847161+03:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:',			#protocol : #'public - configuration',			#sourceCode : 'orthoVerticalBalanceTo: balance\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)).\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:46.881161+03:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #straight,			#protocol : #'public - configuration',			#sourceCode : 'straight\r\t"A straight line"\r\tself block: [ :fromPoint :toPoint | Array with: fromPoint with: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #straight,			#protocol : #'as yet unclassified',			#sourceCode : 'straight\r\t"A straight line"\r\tself block: [ :fromPoint :toPoint | Array with: fromPoint with: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:46.942161+03:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #straight,			#protocol : #'public - configuration',			#sourceCode : 'straight\r\t"A straight line"\r\tself block: [ :fromPoint :toPoint | Array with: fromPoint with: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:46.994161+03:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #orthoVertical,			#protocol : #'public - configuration',			#sourceCode : 'orthoVertical\r\tself orthoVerticalBalanceTo: 0.5',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #orthoVertical,			#protocol : #'as yet unclassified',			#sourceCode : 'orthoVertical\r\tself orthoVerticalBalanceTo: 0.5',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:46.999161+03:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #orthoVertical,			#protocol : #'public - configuration',			#sourceCode : 'orthoVertical\r\tself orthoVerticalBalanceTo: 0.5',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:47.035161+03:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:',			#protocol : #'public - configuration',			#sourceCode : 'orthoHorizontalBalanceTo: balance\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)).\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:',			#protocol : #'as yet unclassified',			#sourceCode : 'orthoHorizontalBalanceTo: balance\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)).\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:47.040161+03:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:',			#protocol : #'public - configuration',			#sourceCode : 'orthoHorizontalBalanceTo: balance\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)).\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-SparseMatrix-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:16:47.075161+03:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAbstractLine subclass: #RTMultiLine\r\tinstanceVariableNames: \'blockProducingPath\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Extensions\'',				#superclassName : 'RTAbstractLine'			},			#name : #RTMultiLine,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTMultiLine,						#isMetaSide : false					},					#name : #blockProducingPath,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTMultiLine class\r\tinstanceVariableNames: \'\''				},				#name : #'RTMultiLine class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTMultiLine,					#isMetaSide : false				},				#parent : @7,				#content : 'A RTMultiLine represents \r\rInstance Variables\r\tblockProducingPath:\t\t<Block>   a two arg block that produces the path. The block has to return the collection of points\r\rblockProducingPath\r\t- xxxxx\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Extensions,			#package : #LNU-SparseMatrix-Extensions,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'public - configuration'	}}