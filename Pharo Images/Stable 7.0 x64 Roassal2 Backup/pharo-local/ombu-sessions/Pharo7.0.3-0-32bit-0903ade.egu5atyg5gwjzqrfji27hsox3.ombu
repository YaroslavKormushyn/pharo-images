OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:23:10.430503+03:00' ],		#prior : OmReference [ 'Pharo7.0.3-0-32bit-0903ade.1obzutqu3dn5nn2akgw3weylw', '35' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #LNU-Roassal-Extensions,		#affectedPackageName : #LNU-Roassal-Extensions	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:23:10.500503+03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Roassal-Extensions,		#newCategory : #LNU-Roassal-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAttachPoint subclass: #RTHorizontalRightAttachPoint\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-Roassal-Extensions\'',				#superclassName : 'RTAttachPoint'			},			#name : #RTHorizontalRightAttachPoint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTHorizontalRightAttachPoint class\r\tinstanceVariableNames: \'\''				},				#name : #'RTHorizontalRightAttachPoint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTHorizontalRightAttachPoint,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-Roassal-Extensions,			#package : #LNU-Roassal-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:23:13.456503+03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Roassal-Extensions,		#newCategory : #LNU-Roassal-Extensions,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAttachPoint subclass: #RTVerticalBottomAttachPoint\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-Roassal-Extensions\'',				#superclassName : 'RTAttachPoint'			},			#name : #RTVerticalBottomAttachPoint,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTVerticalBottomAttachPoint class\r\tinstanceVariableNames: \'\''				},				#name : #'RTVerticalBottomAttachPoint class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTVerticalBottomAttachPoint,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-Roassal-Extensions,			#package : #LNU-Roassal-Extensions,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:08.874503+03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withHorizontalRightAttachPoint,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: attach point"\rwithHorizontalRightAttachPoint\r\t| ap |\r\tap := RTHorizontalRightAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withHorizontalRightAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: attach point"\rwithHorizontalRightAttachPoint\r\t| ap |\r\tap := RTHorizontalRightAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:08.892503+03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTShape subclass: #RTAbstractLine\r\tinstanceVariableNames: \'width attachPoint allowSelfLoop\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Roassal2-Core-Shapes\'',				#superclassName : 'RTShape'			},			#name : #RTAbstractLine,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #width,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #attachPoint,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTAbstractLine,						#isMetaSide : false					},					#name : #allowSelfLoop,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTAbstractLine class\r\tinstanceVariableNames: \'\''				},				#name : #'RTAbstractLine class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTAbstractLine,					#isMetaSide : false				},				#parent : @7,				#content : 'All  my subclasses describes a line shape',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Roassal2-Core-Shapes,			#package : #Roassal2-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:09.017503+03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withVerticalBottomAttachPoint,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: attach point"\rwithVerticalBottomAttachPoint\r\t| ap |\r\tap := RTVerticalBottomAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withVerticalBottomAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: attach point"\rwithVerticalBottomAttachPoint\r\t| ap |\r\tap := RTVerticalBottomAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:38.392503+03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModel:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectModel: model\r\t[ (view elementFromModel: model) color: Color blue ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModel:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'deselectModel: model\r\t[ (view elementFromModel: model) color: Color blue ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:38.454503+03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModel:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model) color: Color blue ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModel:inGroup:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'deselectModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model) color: Color blue ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:38.689503+03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModels:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectModels: modelCollection\r\tmodelCollection\r\t\tdo: [ :model | \r\t\t\t[ (self view elementFromModel: model) color: Color blue ]\r\t\t\t\ton: Error\r\t\t\t\tdo: [ :exception | nil ] ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectModels:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'deselectModels: modelCollection\r\tmodelCollection\r\t\tdo: [ :model | \r\t\t\t[ (self view elementFromModel: model) color: Color blue ]\r\t\t\t\ton: Error\r\t\t\t\tdo: [ :exception | nil ] ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:38.914503+03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectUsing:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectUsing: aBlock\r\t"deselect all elements for which models aBlock answers true"\r\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color blue ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:49',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectUsing:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'deselectUsing: aBlock\r\t"deselect all elements for which models aBlock answers true"\r\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color blue ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:49',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:39.089503+03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectUsing:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'deselectUsing: aBlock inGroup: groupName\r\t"deselect all elements for which models aBlock answers true"\r\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color blue ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:07',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'deselectUsing:inGroup:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'deselectUsing: aBlock inGroup: groupName\r\t"deselect all elements for which models aBlock answers true"\r\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color blue ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:07',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:39.288503+03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'groupToExisting:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'groupToExisting: aName\r\t"Add to existing group any new elements added to the view"\r\r\t| newGroup existingGroup |\r\tnewGroup := self newElementsAsGroup.\r\texistingGroup := [mapping at: aName] on: KeyNotFound do: [ KeyNotFound signal: \'No group with \', aName, \' was found\' ].\r\texistingGroup addAll: newGroup elements',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'groupToExisting:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'groupToExisting: aName\r\t"Add to existing group any new elements added to the view"\r\r\t| newGroup existingGroup |\r\tnewGroup := self newElementsAsGroup.\r\texistingGroup := [mapping at: aName] on: KeyNotFound do: [ KeyNotFound signal: \'No group with \', aName, \' was found\' ].\r\texistingGroup addAll: newGroup elements',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:39.462503+03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'hasGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'hasGroup: groupId\r\t"returns whether a group under groupId exists in the mapping"\r\r\t^ mapping includesKey: groupId',			#stamp : 'YaroslavKormushyn 5/6/2019 16:04',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'hasGroup:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'hasGroup: groupId\r\t"returns whether a group under groupId exists in the mapping"\r\r\t^ mapping includesKey: groupId',			#stamp : 'YaroslavKormushyn 5/6/2019 16:04',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:39.640503+03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModel:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightModel: model\r\t[ (view elementFromModel: model)\r\t\tcolor: Color yellow ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModel:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'highlightModel: model\r\t[ (view elementFromModel: model)\r\t\tcolor: Color yellow ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:39.845503+03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModel:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model) color: Color yellow ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModel:inGroup:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'highlightModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model) color: Color yellow ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:39.968503+03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModels:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightModels: modelCollection\r\tmodelCollection\r\t\tdo: [ :model | \r\t\t\t[ (view elementFromModel: model) color: Color yellow ]\r\t\t\t\ton: Error\r\t\t\t\tdo: [ :exception | nil ] ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightModels:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'highlightModels: modelCollection\r\tmodelCollection\r\t\tdo: [ :model | \r\t\t\t[ (view elementFromModel: model) color: Color yellow ]\r\t\t\t\ton: Error\r\t\t\t\tdo: [ :exception | nil ] ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.145503+03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightUsing:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightUsing: aBlock\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color yellow ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:49',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightUsing:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'highlightUsing: aBlock\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color yellow ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:49',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.320503+03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightUsing:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'highlightUsing: aBlock inGroup: groupName\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color yellow ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:08',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'highlightUsing:inGroup:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'highlightUsing: aBlock inGroup: groupName\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color yellow ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:08',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.509503+03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'move:between:and:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'move: name1 between: name2 and: name3\r\t| g1 g2 g3 |\r\tg1 := self groupWithoutNest: (mapping at: name1).\r\tg2 := self groupWithoutNest: (mapping at: name2).\r\tg3 := self groupWithoutNest: (mapping at: name3).\r\tTRConstraint move: g1 between: g2 and: g3',			#stamp : 'YaroslavKormushyn 5/5/2019 23:02',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'move:between:and:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'move: name1 between: name2 and: name3\r\t| g1 g2 g3 |\r\tg1 := self groupWithoutNest: (mapping at: name1).\r\tg2 := self groupWithoutNest: (mapping at: name2).\r\tg3 := self groupWithoutNest: (mapping at: name3).\r\tTRConstraint move: g1 between: g2 and: g3',			#stamp : 'YaroslavKormushyn 5/5/2019 23:02',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.577503+03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawBackgroundsFor:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'redrawBackgroundsFor: groupNames\r\tself removeAllBackgrounds.\r\tgroupNames\r\t\tdo:\r\t\t\t[ :name | self setBackgroundColor: (Color gray alpha: 0.2) forGroup: name ].\r\t\t(mapping includesKey: #labels)\r\t\tifTrue: [ self groupToExisting: #labels ]\r\t\tifFalse: [ self group: #labels ]\r\t',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawBackgroundsFor:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'redrawBackgroundsFor: groupNames\r\tself removeAllBackgrounds.\r\tgroupNames\r\t\tdo:\r\t\t\t[ :name | self setBackgroundColor: (Color gray alpha: 0.2) forGroup: name ].\r\t\t(mapping includesKey: #labels)\r\t\tifTrue: [ self groupToExisting: #labels ]\r\t\tifFalse: [ self group: #labels ]\r\t',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.585503+03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawNamesAndBackgroundsFor:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'redrawNamesAndBackgroundsFor: groupNames\r\tself\r\t\tremoveAllBackgrounds;\r\t\tremoveAllNames.\r\tgroupNames\r\t\tdo: [ :name | \r\t\t\tself setBackgroundColor: (Color gray alpha: 0.2) forGroup: name.\r\t\t\tself nameGroup: name as: name asString ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawNamesAndBackgroundsFor:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'redrawNamesAndBackgroundsFor: groupNames\r\tself\r\t\tremoveAllBackgrounds;\r\t\tremoveAllNames.\r\tgroupNames\r\t\tdo: [ :name | \r\t\t\tself setBackgroundColor: (Color gray alpha: 0.2) forGroup: name.\r\t\t\tself nameGroup: name as: name asString ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.592503+03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawNamesFor:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'redrawNamesFor: groupNames\r\tself removeAllNames.\r\tgroupNames do: [ :name | self nameGroup: name as: name asString ].\r\t(mapping includesKey: #labels)\r\t\tifTrue: [ self groupToExisting: #labels ]\r\t\tifFalse: [ self group: #labels ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'redrawNamesFor:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'redrawNamesFor: groupNames\r\tself removeAllNames.\r\tgroupNames do: [ :name | self nameGroup: name as: name asString ].\r\t(mapping includesKey: #labels)\r\t\tifTrue: [ self groupToExisting: #labels ]\r\t\tifFalse: [ self group: #labels ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.599503+03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'replaceElementsInGroup:with:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'replaceElementsInGroup: groupName with: matrix\r\tself removeGroup: groupName.\r\tMatrixVisualizer on: matrix withView: view.\r\tself group: groupName.\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'replaceElementsInGroup:with:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'replaceElementsInGroup: groupName with: matrix\r\tself removeGroup: groupName.\r\tMatrixVisualizer on: matrix withView: view.\r\tself group: groupName.\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.608503+03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'replaceGroup:with:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'replaceGroup: groupName with: elements\r\tself removeGroup: groupName.\r\tself view addAll: elements.\r\tself group: groupName.\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 22:33',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'replaceGroup:with:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'replaceGroup: groupName with: elements\r\tself removeGroup: groupName.\r\tself view addAll: elements.\r\tself group: groupName.\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 22:33',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.615503+03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModel:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectModel: model\r\t[ (view elementFromModel: model) color: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | \r\t\t\tnil.].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModel:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'selectModel: model\r\t[ (view elementFromModel: model) color: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | \r\t\t\tnil.].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.621503+03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModel:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model)\r\t\tcolor: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModel:inGroup:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'selectModel: model inGroup: group\r\t[ ((self getGroup: group) elementFromModel: model)\r\t\tcolor: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.628503+03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModels:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectModels: modelCollection\r\tmodelCollection do: [ :model | \r\t\t[ (self view elementFromModel: model) color: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ]]. \r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectModels:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'selectModels: modelCollection\r\tmodelCollection do: [ :model | \r\t\t[ (self view elementFromModel: model) color: Color red ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ]]. \r\tself view signalUpdate',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.637503+03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectUsing:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectUsing: aBlock\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\t\tthenDo: [ :el | el color: Color red ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:48',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectUsing:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'selectUsing: aBlock\r\t[ view elements\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\t\tthenDo: [ :el | el color: Color red ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 19:48',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.640503+03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTObject subclass: #RTComposer\r\tinstanceVariableNames: \'stack view gap mapping groups backgrounds names\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Roassal2-Builder-Composer\'',				#superclassName : 'RTObject'			},			#name : #RTComposer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #stack,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #view,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #gap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #mapping,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #groups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #backgrounds,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTComposer,						#isMetaSide : false					},					#name : #names,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTComposer class\r\tinstanceVariableNames: \'\''				},				#name : #'RTComposer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTComposer,					#isMetaSide : false				},				#parent : @7,				#content : 'I am responsible to compose several visualizations.\r\rFor example:\r====\rcompo := RTComposer new.\r\rb := RTMondrian new.\rb view: compo view.\rb nodes: (1 to: 3).\rb build.\rcompo group: #g1.\r\rb := RTMondrian new.\rb view: compo view.\rb nodes: (1 to: 4).\rb build.\r\rcompo group: #g2.\r\rcompo layout: RTVerticalLineLayout new alignCenter. \rcompo view\r====',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Roassal2-Builder-Composer,			#package : #Roassal2,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:40.867503+03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectUsing:inGroup:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'selectUsing: aBlock inGroup: groupName\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color red ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:08',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTComposer,				#isMetaSide : false			},			#name : #'selectUsing:inGroup:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'selectUsing: aBlock inGroup: groupName\r\t[ (self getGroup: groupName)\r\t\tselect: [ :el | \r\t\t\t[ aBlock value: el model ]\r\t\t\t\ton: Error\r\t\t\t\tdo: false ]\r\t\tthenDo: [ :el | el color: Color red ] ]\r\t\ton: Error\r\t\tdo: [ :exception | nil ].\r\tself view signalUpdate',			#stamp : 'YaroslavKormushyn 5/5/2019 20:08',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:53.182503+03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:withOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\t offset = Number to add to x"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:withOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\t offset = Number to add to x"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:53.197503+03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalancedToBottomWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalancedToBottomWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := { toPoint x . fromPoint x } max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalancedToBottomWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalancedToBottomWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := { toPoint x . fromPoint x } max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:53.204503+03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:withOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: public - configuration"\rorthoVerticalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\toffset = Number to add to mid y"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:withOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: public - configuration"\rorthoVerticalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\toffset = Number to add to mid y"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:53.210503+03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAbstractLine subclass: #RTMultiLine\r\tinstanceVariableNames: \'blockProducingPath\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Roassal2-Core-Shapes\'',				#superclassName : 'RTAbstractLine'			},			#name : #RTMultiLine,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTMultiLine,						#isMetaSide : false					},					#name : #blockProducingPath,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTMultiLine class\r\tinstanceVariableNames: \'\''				},				#name : #'RTMultiLine class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTMultiLine,					#isMetaSide : false				},				#parent : @7,				#content : 'A RTMultiLine represents \r\rInstance Variables\r\tblockProducingPath:\t\t<Block>   a two arg block that produces the path. The block has to return the collection of points\r\rblockProducingPath\r\t- xxxxx\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Roassal2-Core-Shapes,			#package : #Roassal2-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:24:53.313503+03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalancedToRightWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'orthoVerticalBalancedToRightWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := {toPoint y.\r\t\t\tfromPoint y} max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalancedToRightWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'orthoVerticalBalancedToRightWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := {toPoint y.\r\t\t\tfromPoint y} max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:25:43.328503+03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #horizontalRightAttachPoint,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: shape - attach point on edges"\rhorizontalRightAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withHorizontalRightAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #horizontalRightAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: shape - attach point on edges"\rhorizontalRightAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withHorizontalRightAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:25:43.580503+03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineBottommostWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineBottommostWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new withHorizontalAttachPoint; orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineBottommostWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineBottommostWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new withHorizontalAttachPoint; orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:25:43.636503+03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:25:43.642503+03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoVerticalLineRightmostWithOffset:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: as yet unclassified"\rorthoVerticalLineRightmostWithOffset: offset\r\t^ self\r\t\tshape:\r\t\t\t(RTStyledMultiLine new\r\t\t\t\twithVerticallAttachPoint;\r\t\t\t\torthoVerticalBalancedToRightWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoVerticalLineRightmostWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: as yet unclassified"\rorthoVerticalLineRightmostWithOffset: offset\r\t^ self\r\t\tshape:\r\t\t\t(RTStyledMultiLine new\r\t\t\t\twithVerticallAttachPoint;\r\t\t\t\torthoVerticalBalancedToRightWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:25:43.646503+03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAbstractBuilder subclass: #RTShapeBuilder\r\tinstanceVariableNames: \'shape createdElements shapeInitializer\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Roassal2-Builder-Common\'',				#superclassName : 'RTAbstractBuilder'			},			#name : #RTShapeBuilder,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #shape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #createdElements,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapeBuilder,						#isMetaSide : false					},					#name : #shapeInitializer,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTShapeBuilder class\r\tinstanceVariableNames: \'\''				},				#name : #'RTShapeBuilder class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTShapeBuilder,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Roassal2-Builder-Common,			#package : #Roassal2,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:25:43.762503+03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #verticalBottomAttachPoint,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : '"protocol: shape - attach point on edges"\rverticalBottomAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withVerticalBottomAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #verticalBottomAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: shape - attach point on edges"\rverticalBottomAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withVerticalBottomAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:25:59.462503+03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'RTAnnounceableObject subclass: #RTShapedObject\r\tinstanceVariableNames: \'isFixed model shape trachelShape view\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Roassal2-Core-Base\'',				#superclassName : 'RTAnnounceableObject'			},			#name : #RTShapedObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #isFixed,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #model,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #shape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #trachelShape,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #RTShapedObject,						#isMetaSide : false					},					#name : #view,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'RTShapedObject class\r\tinstanceVariableNames: \'\''				},				#name : #'RTShapedObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #RTShapedObject,					#isMetaSide : false				},				#parent : @7,				#content : 'A RTShapedObject is the super class of RTElement and RTEdge. A RTShapeObject has the ability to keep attributes, and receive a shape. This is an abstract class, it is not meant to be instantiated.\r\rInstance Variables\r\tattributes:\t\t<Object>\r\tisFixed:\t\t<Object>\r\tmodel:\t\t<Object>\r\tshape:\t\t<Object>\r\ttrachelShape:\t\t<Object>\r\tview:\t\t<Object>\r\rattributes\r\t- xxxxx\r\risFixed\r\t- xxxxx\r\rmodel\r\t- xxxxx\r\rshape\r\t- xxxxx\r\rtrachelShape\r\t- xxxxx\r\rview\r\t- xxxxx\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Roassal2-Core-Base,			#package : #Roassal2-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:25:59.483503+03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapedObject,				#isMetaSide : false			},			#name : #'updateModelAndRedraw:',			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'updateModelAndRedraw: anObject\r\t"anObject could be any Smalltalk object. Shapes are computed based on that object"\r\r\tself model: anObject.\r\tself update.\r\tself trachelShape relayoutRelative',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapedObject,				#isMetaSide : false			},			#name : #'updateModelAndRedraw:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'updateModelAndRedraw: anObject\r\t"anObject could be any Smalltalk object. Shapes are computed based on that object"\r\r\tself model: anObject.\r\tself update.\r\tself trachelShape relayoutRelative',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:26:08.217503+03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'TRCallableObject subclass: #TRCanvas\r\tinstanceVariableNames: \'canvas shapes fixedShapes extent animations morph camera announcer color session eventOverseer theme clearBackground\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Trachel-Core\'',				#superclassName : 'TRCallableObject'			},			#name : #TRCanvas,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #canvas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #shapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #fixedShapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #extent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #animations,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #morph,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #camera,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #announcer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #session,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #eventOverseer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #theme,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TRCanvas,						#isMetaSide : false					},					#name : #clearBackground,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TRCanvas class\r\tinstanceVariableNames: \'\''				},				#name : #'TRCanvas class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TRCanvas,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Trachel-Core,			#package : #Trachel,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*LNU-SparseMatrix'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:26:08.280503+03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TRCanvas,				#isMetaSide : false			},			#name : #focusOnCenterScaled,			#protocol : #'*LNU-SparseMatrix',			#sourceCode : 'focusOnCenterScaled\r\t^ self camera focusOnCenterScaled: self extent * 0.9',			#stamp : 'CompatibleUserName 9/20/2019 15:05:29',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TRCanvas,				#isMetaSide : false			},			#name : #focusOnCenterScaled,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'focusOnCenterScaled\r\t^ self camera focusOnCenterScaled: self extent * 0.9',			#stamp : 'CompatibleUserName 9/20/2019 15:05:29',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:27:20.446503+03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpCategoryAddition {		#classCategoryName : #LNU-LinkedData-Visual,		#affectedPackageName : #LNU-LinkedData-Visual	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:27:20.535503+03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-LinkedData-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedDataVisualizer\r\tinstanceVariableNames: \'gap elementSize colors shapes operation operands process operationBlock composer namedGroups backgroundGroups metaLinks delay semaphore linkMessageConfigs\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual\'',				#superclassName : 'Object'			},			#name : #LinkedDataVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #gap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #colors,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #shapes,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operation,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operands,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #process,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #operationBlock,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #namedGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #backgroundGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #metaLinks,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #delay,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #semaphore,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedDataVisualizer,						#isMetaSide : false					},					#name : #linkMessageConfigs,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedDataVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedDataVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedDataVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\rI represent a base class for visualizing a linked data structure and its operations.\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rI can show a unary or a binary operation on a linked data structure given the right initialization.\rI know of the elements of a given data structure and the links between them.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rI use Roassal2 and its main components like RTView, TRCanvas for displaying output.\r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : 'YaroslavKormushyn 9/23/2019 12:03'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:27:26.990503+03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-LinkedData-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkType\r\tinstanceVariableNames: \'value\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual\'',				#superclassName : 'Object'			},			#name : #LinkType,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkType,						#isMetaSide : false					},					#name : #value,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkType class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkType class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkType,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\rI represent an enum of permitted link types for LinkedDataVizualizer.\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tvalue:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'YaroslavKormushyn 9/24/2019 17:39'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:27:33.866503+03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-LinkedData-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkMessageConfig\r\tinstanceVariableNames: \'command commandBlock control instance linkType when operControls varControls\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-LinkedData-Visual\'',				#superclassName : 'Object'			},			#name : #LinkMessageConfig,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #command,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #commandBlock,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #control,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #instance,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #linkType,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #when,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #operControls,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkMessageConfig,						#isMetaSide : false					},					#name : #varControls,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkMessageConfig class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkMessageConfig class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkMessageConfig,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-LinkedData-Visual,			#package : #LNU-LinkedData-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:28:53.197503+03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PackageManifest subclass: #ManifestLNUSparseMatrix\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'LNU-SparseMatrix-Manifest\'',				#superclassName : 'PackageManifest'			},			#name : #ManifestLNUSparseMatrix,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestLNUSparseMatrix class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteManifestLNUSparseMatrix class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteManifestLNUSparseMatrix,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Manifest,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:34:54.221503+03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PackageManifest subclass: #ManifestLNUSparseMatrix\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix\'',				#superclassName : 'PackageManifest'			},			#name : #ManifestLNUSparseMatrix,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestLNUSparseMatrix class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestLNUSparseMatrix class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestLNUSparseMatrix,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:34:54.237503+03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix,		#newCategory : #LNU-SparseMatrix-Manifest,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PackageManifest subclass: #ManifestLNUSparseMatrix\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Manifest\'',				#superclassName : 'PackageManifest'			},			#name : #ManifestLNUSparseMatrix,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestLNUSparseMatrix class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestLNUSparseMatrix class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestLNUSparseMatrix,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Manifest,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-10-04T14:34:54.245503+03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PackageManifest subclass: #ManifestLNUSparseMatrix\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Manifest\'',				#superclassName : 'PackageManifest'			},			#name : #ManifestLNUSparseMatrix,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestLNUSparseMatrix class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestLNUSparseMatrix class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestLNUSparseMatrix,					#isMetaSide : false				},				#parent : @7,				#content : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Manifest,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:37:37.889503+03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:37',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:37:53.013503+03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:37',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'LNU-Roassal-Extensions\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:37',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:38:47.291503+03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'LNU-Roassal-Extensions\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:37',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Collections-Streams\' #\'LNU-Roassal-Extensions\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:38',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:39:27.592503+03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Collections-Streams\' #\'LNU-Roassal-Extensions\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:38',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Collections-Streams\' #\'Transcript-Core\' #\'LNU-Roassal-Extensions\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:39',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:39:36.014503+03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Collections-Streams\' #\'Transcript-Core\' #\'LNU-Roassal-Extensions\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:39',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Collections-Streams\' #\'Transcript-Core\' #\'LNU-Roassal-Extensions\' #\'Kernel-Chronology-Extras\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:39',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:48:31.281503+03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Collections-Streams\' #\'Transcript-Core\' #\'LNU-Roassal-Extensions\' #\'Kernel-Chronology-Extras\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:39',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestLNUSparseMatrix class',				#isMetaSide : true			},			#name : #manuallyResolvedDependencies,			#protocol : #'meta-data - dependency analyser',			#sourceCode : 'manuallyResolvedDependencies\r\t^ #(#\'Collections-Streams\' #\'Transcript-Core\' #\'LNU-Roassal-Extensions\' #\'Kernel-Chronology-Extras\' #\'Collections-Support\' #\'Math-Operations-Extensions\')',			#stamp : 'YaroslavKormushyn 10/4/2019 14:48',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:51:29.862503+03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #COOSparseMatrix,				#isMetaSide : false			},			#name : #'byMatrixAnimated:withDelay:',			#protocol : #'as yet unclassified',			#sourceCode : 'byMatrixAnimated: aCOOSparseMatrix withDelay: delay\r\t| result transposed newNode sum operationProcess operationBlock visualizer currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker |\r\tcolumnNumber = aCOOSparseMatrix rowNumber\r\t\tifFalse: [ Error signal: \'Invalid matrix size\' ].\r\t(aCOOSparseMatrix isEmpty or: [ self isEmpty ])\r\t\tifTrue:\r\t\t\t[ ^ self class rows: rowNumber columns: aCOOSparseMatrix columnNumber ].\r\tresult := self class\r\t\trows: rowNumber\r\t\tcolumns: aCOOSparseMatrix columnNumber.\r\tresult\r\t\tfirst:\r\t\t\t((COOSparseMatrixNode new row: 0 column: 0 value: 0)\r\t\t\t\trightNeighbour: nil).\r\tresult last: result first.\r\ttransposed := aCOOSparseMatrix transpose.\r\tvisualizer := MatrixOperationVisualizer new.\r\tvisualizer getComposedViewOf: self with: transposed result: result.\r\tvisualizer setLinksForMultiplicationOn: self.\r\toperationBlock := [ | priorityColumn leftMarkerElement rightMarkerElement nowProcessingElementIndex |\r\tleftSavedMatrixMarker := leftMatrixMarker := first.\r\trightMatrixMarker := transposed first.\r\t"visualizer\r\t\tselectModels:\r\t\t\t{rightMatrixMarker.\r\t\t\tleftMatrixMarker}."\r\tcurrentLeftRow := leftMatrixMarker row.\r\tcurrentRightColumn := rightMatrixMarker row.\r\tnowProcessingElementIndex := (RTLabel\r\t\ttext:\r\t\t\t[ :indices | \'Now processing \' , (indices first @ indices last) asString ])\r\t\telementOn:\r\t\t\t{currentLeftRow.\r\t\t\tcurrentRightColumn}.\r\tvisualizer add: nowProcessingElementIndex.\r\tvisualizer group: #nowProcessing.\r\tleftMarkerElement := (COOSparseMatrixVisualizer new\r\t\tgetElementShapeScaled: 5) elementOn: leftMatrixMarker.\r\tvisualizer add: leftMarkerElement.\r\tvisualizer group: #leftMarker.\r\trightMarkerElement := (COOSparseMatrixVisualizer new\r\t\tgetElementShapeScaled: 5) elementOn: rightMatrixMarker.\r\tvisualizer add: rightMarkerElement.\r\tvisualizer group: #rightMarker.\r\tvisualizer setPositionsForCOOMultiplication.\r\tvisualizer\r\t\tnamedGroups: #(#left #result #right #leftMarker #rightMarker).\r\tvisualizer backgroundGroups: #(#left #result #right).\r\tvisualizer update.\r\tsum := 0.\r\tself\r\t\twithEscaper: [ :end | \r\t\t\t[ rightMatrixMarker isNotNil or: [ leftMatrixMarker isNotNil ] ]\r\t\t\t\twhileTrue: [ self\r\t\t\t\t\t\twithEscaper: [ :outer | \r\t\t\t\t\t\t\t"Switch to next row in left and reset right marker if right ended"\r\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\tifTrue: [ rightMatrixMarker := transposed first.\r\t\t\t\t\t\t\t\t\tleftSavedMatrixMarker := leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t"visualizer\r\t\t\t\t\t\t\t\t\t\tselectModels:\r\t\t\t\t\t\t\t\t\t\t\t{leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker}."\r\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\trightMarkerElement updateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t"reset left marker to row beginning"\r\t\t\t\t\t\t\t"visualizer deselectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\tleftMatrixMarker := leftSavedMatrixMarker.\r\t\t\t\t\t\t\t"visualizer selectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\tcurrentLeftRow := leftMatrixMarker row.\r\t\t\t\t\t\t\tcurrentRightColumn := rightMatrixMarker row.\r\t\t\t\t\t\t\tnowProcessingElementIndex\r\t\t\t\t\t\t\t\tmodel:\r\t\t\t\t\t\t\t\t\t{currentLeftRow.\r\t\t\t\t\t\t\t\t\tcurrentRightColumn}.\r\t\t\t\t\t\t\tnowProcessingElementIndex update.\r\t\t\t\t\t\t\tself\r\t\t\t\t\t\t\t\twithEscaper: [ :next | \r\t\t\t\t\t\t\t\t\t[ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ] ] ]\r\t\t\t\t\t\t\t\t\t\twhileTrue: [ priorityColumn := {leftMatrixMarker column.\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker column} max.\r\t\t\t\t\t\t\t\t\t\t\t"Find same column as prioritized or higher in left"\r\t\t\t\t\t\t\t\t\t\t\t[ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker column < priorityColumn ] ] ]\r\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ "visualizer deselectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t"visualizer selectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ visualizer deselectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ visualizer selectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMarkerElement\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ] ].\r\r\t\t\t\t\t\t\t\t\t\t\t\t\t"If no intersection - end"\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ end value ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t"Else - continue loop"\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker row ~= currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ visualizer deselectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ visualizer selectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMarkerElement\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ] ].\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\tpriorityColumn := leftMatrixMarker column.\r\r\t\t\t\t\t\t\t\t\t\t\t"Find same column as prioritized or higher in right"\r\t\t\t\t\t\t\t\t\t\t\t[ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker column < priorityColumn ] ] ]\r\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ visualizer deselectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer selectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ "visualizer deselectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"visualizer selectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ leftMarkerElement updateModelAndRedraw: leftMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\r\t\t\t\t\t\t\t\t\t\t\t\t\t"If no intersections - end"\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ end value ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t"Else - continue loop"\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker row ~= currentRightColumn\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ next value ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker column = rightMatrixMarker column\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ visualizer highlightModel: leftMatrixMarker inGroup: #left.\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\thighlightModel: rightMatrixMarker\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tinGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\tsum := sum\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ (leftMatrixMarker value * rightMatrixMarker value).\r\t\t\t\t\t\t\t\t\t\t\t\t\t"visualizer deselectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeselectModel: rightMatrixMarker\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tinGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectModels:\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker}.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ]\r\t\t\t\t\t\t\t\t\t\t\t\tifFalse: [ priorityColumn := rightMatrixMarker column ] ] ].\r\t\t\t\t\t\t\tsum = 0\r\t\t\t\t\t\t\t\tifFalse: [ newNode := COOSparseMatrixNode\r\t\t\t\t\t\t\t\t\t\trow: currentLeftRow\r\t\t\t\t\t\t\t\t\t\tcolumn: currentRightColumn\r\t\t\t\t\t\t\t\t\t\tvalue: sum.\r\t\t\t\t\t\t\t\t\tresult last rightNeighbour: newNode.\r\t\t\t\t\t\t\t\t\tnewNode leftNeighbour: result last.\r\t\t\t\t\t\t\t\t\tresult last: newNode.\r\t\t\t\t\t\t\t\t\tsum := 0.\r\t\t\t\t\t\t\t\t\tvisualizer updateResultWith: result ] ].\r\t\t\t\t\tsum = 0\r\t\t\t\t\t\tifFalse: [ newNode := COOSparseMatrixNode\r\t\t\t\t\t\t\t\trow: currentLeftRow\r\t\t\t\t\t\t\t\tcolumn: currentRightColumn\r\t\t\t\t\t\t\t\tvalue: sum.\r\t\t\t\t\t\t\tresult last rightNeighbour: newNode.\r\t\t\t\t\t\t\tnewNode leftNeighbour: result last.\r\t\t\t\t\t\t\tresult last: newNode.\r\t\t\t\t\t\t\tsum := 0.\r\t\t\t\t\t\t\tvisualizer updateResultWith: result ] ] ].\r\t"nil the reference to dummy head"\r\tresult first rightNeighbour leftNeighbour: nil.\r\tresult first: result first rightNeighbour.\r\tvisualizer updateResultWith: result.\r\tvisualizer unlink ].\r\toperationProcess := operationBlock newProcess.\r\tvisualizer setUpMenuWithProcess: operationProcess.\r\t^ visualizer view',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #COOSparseMatrix,				#isMetaSide : false			},			#name : #'byMatrixAnimated:withDelay:',			#protocol : #'as yet unclassified',			#sourceCode : 'byMatrixAnimated: aCOOSparseMatrix withDelay: delay\r\t| result transposed newNode sum operationProcess operationBlock visualizer currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker |\r\tcolumnNumber = aCOOSparseMatrix rowNumber\r\t\tifFalse: [ Error signal: \'Invalid matrix size\' ].\r\t(aCOOSparseMatrix isEmpty or: [ self isEmpty ])\r\t\tifTrue:\r\t\t\t[ ^ self class rows: rowNumber columns: aCOOSparseMatrix columnNumber ].\r\tresult := self class\r\t\trows: rowNumber\r\t\tcolumns: aCOOSparseMatrix columnNumber.\r\tresult\r\t\tfirst:\r\t\t\t((COOSparseMatrixNode new row: 0 column: 0 value: 0)\r\t\t\t\trightNeighbour: nil).\r\tresult last: result first.\r\ttransposed := aCOOSparseMatrix transpose.\r\tvisualizer := MatrixOperationVisualizer new.\r\tvisualizer getComposedViewOf: self with: transposed result: result.\r\tvisualizer setLinksForMultiplicationOn: self.\r\toperationBlock := [ | priorityColumn leftMarkerElement rightMarkerElement nowProcessingElementIndex |\r\tleftSavedMatrixMarker := leftMatrixMarker := first.\r\trightMatrixMarker := transposed first.\r\t"visualizer\r\t\tselectModels:\r\t\t\t{rightMatrixMarker.\r\t\t\tleftMatrixMarker}."\r\tcurrentLeftRow := leftMatrixMarker row.\r\tcurrentRightColumn := rightMatrixMarker row.\r\tnowProcessingElementIndex := (RTLabel\r\t\ttext:\r\t\t\t[ :indices | \'Now processing \' , (indices first @ indices last) asString ])\r\t\telementOn:\r\t\t\t{currentLeftRow.\r\t\t\tcurrentRightColumn}.\r\tvisualizer add: nowProcessingElementIndex.\r\tvisualizer group: #nowProcessing.\r\tleftMarkerElement := (COOSparseMatrixVisualizer new\r\t\tgetElementShapeScaled: 5) elementOn: leftMatrixMarker.\r\tvisualizer add: leftMarkerElement.\r\tvisualizer group: #leftMarker.\r\trightMarkerElement := (COOSparseMatrixVisualizer new\r\t\tgetElementShapeScaled: 5) elementOn: rightMatrixMarker.\r\tvisualizer add: rightMarkerElement.\r\tvisualizer group: #rightMarker.\r\tvisualizer setPositionsForMultiplication.\r\tvisualizer\r\t\tnamedGroups: #(#left #result #right #leftMarker #rightMarker).\r\tvisualizer backgroundGroups: #(#left #result #right).\r\tvisualizer update.\r\tsum := 0.\r\tself\r\t\twithEscaper: [ :end | \r\t\t\t[ rightMatrixMarker isNotNil or: [ leftMatrixMarker isNotNil ] ]\r\t\t\t\twhileTrue: [ self\r\t\t\t\t\t\twithEscaper: [ :outer | \r\t\t\t\t\t\t\t"Switch to next row in left and reset right marker if right ended"\r\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\tifTrue: [ rightMatrixMarker := transposed first.\r\t\t\t\t\t\t\t\t\tleftSavedMatrixMarker := leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t"visualizer\r\t\t\t\t\t\t\t\t\t\tselectModels:\r\t\t\t\t\t\t\t\t\t\t\t{leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker}."\r\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\trightMarkerElement updateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t"reset left marker to row beginning"\r\t\t\t\t\t\t\t"visualizer deselectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\tleftMatrixMarker := leftSavedMatrixMarker.\r\t\t\t\t\t\t\t"visualizer selectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\tcurrentLeftRow := leftMatrixMarker row.\r\t\t\t\t\t\t\tcurrentRightColumn := rightMatrixMarker row.\r\t\t\t\t\t\t\tnowProcessingElementIndex\r\t\t\t\t\t\t\t\tmodel:\r\t\t\t\t\t\t\t\t\t{currentLeftRow.\r\t\t\t\t\t\t\t\t\tcurrentRightColumn}.\r\t\t\t\t\t\t\tnowProcessingElementIndex update.\r\t\t\t\t\t\t\tself\r\t\t\t\t\t\t\t\twithEscaper: [ :next | \r\t\t\t\t\t\t\t\t\t[ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ] ] ]\r\t\t\t\t\t\t\t\t\t\twhileTrue: [ priorityColumn := {leftMatrixMarker column.\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker column} max.\r\t\t\t\t\t\t\t\t\t\t\t"Find same column as prioritized or higher in left"\r\t\t\t\t\t\t\t\t\t\t\t[ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker column < priorityColumn ] ] ]\r\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ "visualizer deselectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t"visualizer selectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ visualizer deselectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ visualizer selectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMarkerElement\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ] ].\r\r\t\t\t\t\t\t\t\t\t\t\t\t\t"If no intersection - end"\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ end value ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t"Else - continue loop"\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker row ~= currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ visualizer deselectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ visualizer selectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMarkerElement\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ] ].\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\tpriorityColumn := leftMatrixMarker column.\r\r\t\t\t\t\t\t\t\t\t\t\t"Find same column as prioritized or higher in right"\r\t\t\t\t\t\t\t\t\t\t\t[ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker column < priorityColumn ] ] ]\r\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ visualizer deselectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer selectModel: rightMatrixMarker inGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ "visualizer deselectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"visualizer selectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ leftMarkerElement updateModelAndRedraw: leftMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\r\t\t\t\t\t\t\t\t\t\t\t\t\t"If no intersections - end"\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ end value ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t"Else - continue loop"\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker row ~= currentRightColumn\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ next value ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker column = rightMatrixMarker column\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ visualizer highlightModel: leftMatrixMarker inGroup: #left.\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\thighlightModel: rightMatrixMarker\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tinGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\tsum := sum\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ (leftMatrixMarker value * rightMatrixMarker value).\r\t\t\t\t\t\t\t\t\t\t\t\t\t"visualizer deselectModel: leftMatrixMarker inGroup: #left."\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeselectModel: rightMatrixMarker\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tinGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectModels:\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker}.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ]\r\t\t\t\t\t\t\t\t\t\t\t\tifFalse: [ priorityColumn := rightMatrixMarker column ] ] ].\r\t\t\t\t\t\t\tsum = 0\r\t\t\t\t\t\t\t\tifFalse: [ newNode := COOSparseMatrixNode\r\t\t\t\t\t\t\t\t\t\trow: currentLeftRow\r\t\t\t\t\t\t\t\t\t\tcolumn: currentRightColumn\r\t\t\t\t\t\t\t\t\t\tvalue: sum.\r\t\t\t\t\t\t\t\t\tresult last rightNeighbour: newNode.\r\t\t\t\t\t\t\t\t\tnewNode leftNeighbour: result last.\r\t\t\t\t\t\t\t\t\tresult last: newNode.\r\t\t\t\t\t\t\t\t\tsum := 0.\r\t\t\t\t\t\t\t\t\tvisualizer updateResultWith: result ] ].\r\t\t\t\t\tsum = 0\r\t\t\t\t\t\tifFalse: [ newNode := COOSparseMatrixNode\r\t\t\t\t\t\t\t\trow: currentLeftRow\r\t\t\t\t\t\t\t\tcolumn: currentRightColumn\r\t\t\t\t\t\t\t\tvalue: sum.\r\t\t\t\t\t\t\tresult last rightNeighbour: newNode.\r\t\t\t\t\t\t\tnewNode leftNeighbour: result last.\r\t\t\t\t\t\t\tresult last: newNode.\r\t\t\t\t\t\t\tsum := 0.\r\t\t\t\t\t\t\tvisualizer updateResultWith: result ] ] ].\r\t"nil the reference to dummy head"\r\tresult first rightNeighbour leftNeighbour: nil.\r\tresult first: result first rightNeighbour.\r\tvisualizer updateResultWith: result.\r\tvisualizer unlink ].\r\toperationProcess := operationBlock newProcess.\r\tvisualizer setUpMenuWithProcess: operationProcess.\r\t^ visualizer view',			#stamp : 'YaroslavKormushyn 10/4/2019 14:51',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:51:37.290503+03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #COOSparseMatrix,				#isMetaSide : false			},			#name : #'byMatrixAnimated:withDelay:visualizer:',			#protocol : #'as yet unclassified',			#sourceCode : 'byMatrixAnimated: aCOOSparseMatrix withDelay: delay visualizer: viz\r\t| result transposed newNode sum operationProcess operationBlock visualizer currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker |\r\tcolumnNumber = aCOOSparseMatrix rowNumber\r\t\tifFalse: [ Error signal: \'Invalid matrix size\' ].\r\t(aCOOSparseMatrix isEmpty or: [ self isEmpty ])\r\t\tifTrue:\r\t\t\t[ ^ self class rows: rowNumber columns: aCOOSparseMatrix columnNumber ].\r\tresult := self class\r\t\trows: rowNumber\r\t\tcolumns: aCOOSparseMatrix columnNumber.\r\tresult\r\t\tfirst:\r\t\t\t((COOSparseMatrixNode new row: 0 column: 0 value: 0)\r\t\t\t\trightNeighbour: nil).\r\tresult last: result first.\r\ttransposed := aCOOSparseMatrix transpose.\r\tvisualizer := viz.\r\tvisualizer getComposedViewOf: self with: transposed result: result.\r\toperationBlock := [ | priorityColumn leftMarkerElement rightMarkerElement nowProcessingElementIndex |\r\tleftSavedMatrixMarker := leftMatrixMarker := first.\r\trightMatrixMarker := transposed first.\r\tcurrentLeftRow := leftMatrixMarker row.\r\tcurrentRightColumn := rightMatrixMarker row.\r\tnowProcessingElementIndex := (RTLabel\r\t\ttext:\r\t\t\t[ :indices | \'Now processing \' , (indices first @ indices last) asString ])\r\t\telementOn:\r\t\t\t{currentLeftRow.\r\t\t\tcurrentRightColumn}.\r\tvisualizer add: nowProcessingElementIndex.\r\tvisualizer group: #nowProcessing.\r\tleftMarkerElement := (COOSparseMatrixVisualizer new\r\t\tgetElementShapeScaled: 5) elementOn: leftMatrixMarker.\r\tvisualizer add: leftMarkerElement.\r\tvisualizer group: #leftMarker.\r\trightMarkerElement := (COOSparseMatrixVisualizer new\r\t\tgetElementShapeScaled: 5) elementOn: rightMatrixMarker.\r\tvisualizer add: rightMarkerElement.\r\tvisualizer group: #rightMarker.\r\tvisualizer setPositionsForCOOMultiplication.\r\tvisualizer\r\t\tnamedGroups: #(#left #result #right #leftMarker #rightMarker).\r\tvisualizer backgroundGroups: #(#left #result #right).\r\tvisualizer update.\r\tsum := 0.\r\tself\r\t\twithEscaper: [ :end | \r\t\t\t[ rightMatrixMarker isNotNil or: [ leftMatrixMarker isNotNil ] ]\r\t\t\t\twhileTrue: [ self\r\t\t\t\t\t\twithEscaper: [ :outer | \r\t\t\t\t\t\t\t"Switch to next row in left and reset right marker if right ended"\r\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\tifTrue: [ rightMatrixMarker := transposed first.\r\t\t\t\t\t\t\t\t\tleftSavedMatrixMarker := leftMatrixMarker.\r\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\trightMarkerElement updateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t"reset left marker to row beginning"\r\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\tleftMatrixMarker := leftSavedMatrixMarker.\r\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\tcurrentLeftRow := leftMatrixMarker row.\r\t\t\t\t\t\t\tcurrentRightColumn := rightMatrixMarker row.\r\t\t\t\t\t\t\tnowProcessingElementIndex\r\t\t\t\t\t\t\t\tmodel:\r\t\t\t\t\t\t\t\t\t{currentLeftRow.\r\t\t\t\t\t\t\t\t\tcurrentRightColumn}.\r\t\t\t\t\t\t\tnowProcessingElementIndex update.\r\t\t\t\t\t\t\tself\r\t\t\t\t\t\t\t\twithEscaper: [ :next | \r\t\t\t\t\t\t\t\t\t[ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ] ] ]\r\t\t\t\t\t\t\t\t\t\twhileTrue: [ priorityColumn := {leftMatrixMarker column.\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker column} max.\r\t\t\t\t\t\t\t\t\t\t\t"Find same column as prioritized or higher in left"\r\t\t\t\t\t\t\t\t\t\t\t[ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker column < priorityColumn ] ] ]\r\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ leftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ rightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ] ].\r\r\t\t\t\t\t\t\t\t\t\t\t\t\t"If no intersection - end"\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ end value ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t"Else - continue loop"\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker row ~= currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ rightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ] ].\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\tpriorityColumn := leftMatrixMarker column.\r\r\t\t\t\t\t\t\t\t\t\t\t"Find same column as prioritized or higher in right"\r\t\t\t\t\t\t\t\t\t\t\t[ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker column < priorityColumn ] ] ]\r\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ rightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ leftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ leftMarkerElement updateModelAndRedraw: leftMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\r\t\t\t\t\t\t\t\t\t\t\t\t\t"If no intersections - end"\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ end value ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t"Else - continue loop"\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker row ~= currentRightColumn\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ next value ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker column = rightMatrixMarker column\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\thighlightModel: leftMatrixMarker\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tinGroup: #left.\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\thighlightModel: rightMatrixMarker\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tinGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\tsum := sum\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ (leftMatrixMarker value * rightMatrixMarker value).\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ]\r\t\t\t\t\t\t\t\t\t\t\t\tifFalse: [ priorityColumn := rightMatrixMarker column ] ] ].\r\t\t\t\t\t\t\tsum = 0\r\t\t\t\t\t\t\t\tifFalse: [ newNode := COOSparseMatrixNode\r\t\t\t\t\t\t\t\t\t\trow: currentLeftRow\r\t\t\t\t\t\t\t\t\t\tcolumn: currentRightColumn\r\t\t\t\t\t\t\t\t\t\tvalue: sum.\r\t\t\t\t\t\t\t\t\tresult last rightNeighbour: newNode.\r\t\t\t\t\t\t\t\t\tnewNode leftNeighbour: result last.\r\t\t\t\t\t\t\t\t\tresult last: newNode.\r\t\t\t\t\t\t\t\t\tsum := 0.\r\t\t\t\t\t\t\t\t\tvisualizer updateResultWith: result ] ].\r\t\t\t\t\tsum = 0\r\t\t\t\t\t\tifFalse: [ newNode := COOSparseMatrixNode\r\t\t\t\t\t\t\t\trow: currentLeftRow\r\t\t\t\t\t\t\t\tcolumn: currentRightColumn\r\t\t\t\t\t\t\t\tvalue: sum.\r\t\t\t\t\t\t\tresult last rightNeighbour: newNode.\r\t\t\t\t\t\t\tnewNode leftNeighbour: result last.\r\t\t\t\t\t\t\tresult last: newNode.\r\t\t\t\t\t\t\tsum := 0.\r\t\t\t\t\t\t\tvisualizer updateResultWith: result ] ] ].\r\t"nil the reference to dummy head"\r\tresult first rightNeighbour leftNeighbour: nil.\r\tresult first: result first rightNeighbour.\r\tvisualizer updateResultWith: result ].\r\toperationProcess := operationBlock newProcess.\r\tvisualizer setUpMenuWithProcess: operationProcess.\r\t^ visualizer view',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-SparseMatrix		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #COOSparseMatrix,				#isMetaSide : false			},			#name : #'byMatrixAnimated:withDelay:visualizer:',			#protocol : #'as yet unclassified',			#sourceCode : 'byMatrixAnimated: aCOOSparseMatrix withDelay: delay visualizer: viz\r\t| result transposed newNode sum operationProcess operationBlock visualizer currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker |\r\tcolumnNumber = aCOOSparseMatrix rowNumber\r\t\tifFalse: [ Error signal: \'Invalid matrix size\' ].\r\t(aCOOSparseMatrix isEmpty or: [ self isEmpty ])\r\t\tifTrue:\r\t\t\t[ ^ self class rows: rowNumber columns: aCOOSparseMatrix columnNumber ].\r\tresult := self class\r\t\trows: rowNumber\r\t\tcolumns: aCOOSparseMatrix columnNumber.\r\tresult\r\t\tfirst:\r\t\t\t((COOSparseMatrixNode new row: 0 column: 0 value: 0)\r\t\t\t\trightNeighbour: nil).\r\tresult last: result first.\r\ttransposed := aCOOSparseMatrix transpose.\r\tvisualizer := viz.\r\tvisualizer getComposedViewOf: self with: transposed result: result.\r\toperationBlock := [ | priorityColumn leftMarkerElement rightMarkerElement nowProcessingElementIndex |\r\tleftSavedMatrixMarker := leftMatrixMarker := first.\r\trightMatrixMarker := transposed first.\r\tcurrentLeftRow := leftMatrixMarker row.\r\tcurrentRightColumn := rightMatrixMarker row.\r\tnowProcessingElementIndex := (RTLabel\r\t\ttext:\r\t\t\t[ :indices | \'Now processing \' , (indices first @ indices last) asString ])\r\t\telementOn:\r\t\t\t{currentLeftRow.\r\t\t\tcurrentRightColumn}.\r\tvisualizer add: nowProcessingElementIndex.\r\tvisualizer group: #nowProcessing.\r\tleftMarkerElement := (COOSparseMatrixVisualizer new\r\t\tgetElementShapeScaled: 5) elementOn: leftMatrixMarker.\r\tvisualizer add: leftMarkerElement.\r\tvisualizer group: #leftMarker.\r\trightMarkerElement := (COOSparseMatrixVisualizer new\r\t\tgetElementShapeScaled: 5) elementOn: rightMatrixMarker.\r\tvisualizer add: rightMarkerElement.\r\tvisualizer group: #rightMarker.\r\tvisualizer setPositionsForMultiplication.\r\tvisualizer\r\t\tnamedGroups: #(#left #result #right #leftMarker #rightMarker).\r\tvisualizer backgroundGroups: #(#left #result #right).\r\tvisualizer update.\r\tsum := 0.\r\tself\r\t\twithEscaper: [ :end | \r\t\t\t[ rightMatrixMarker isNotNil or: [ leftMatrixMarker isNotNil ] ]\r\t\t\t\twhileTrue: [ self\r\t\t\t\t\t\twithEscaper: [ :outer | \r\t\t\t\t\t\t\t"Switch to next row in left and reset right marker if right ended"\r\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\tifTrue: [ rightMatrixMarker := transposed first.\r\t\t\t\t\t\t\t\t\tleftSavedMatrixMarker := leftMatrixMarker.\r\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\trightMarkerElement updateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t"reset left marker to row beginning"\r\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\tleftMatrixMarker := leftSavedMatrixMarker.\r\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\tcurrentLeftRow := leftMatrixMarker row.\r\t\t\t\t\t\t\tcurrentRightColumn := rightMatrixMarker row.\r\t\t\t\t\t\t\tnowProcessingElementIndex\r\t\t\t\t\t\t\t\tmodel:\r\t\t\t\t\t\t\t\t\t{currentLeftRow.\r\t\t\t\t\t\t\t\t\tcurrentRightColumn}.\r\t\t\t\t\t\t\tnowProcessingElementIndex update.\r\t\t\t\t\t\t\tself\r\t\t\t\t\t\t\t\twithEscaper: [ :next | \r\t\t\t\t\t\t\t\t\t[ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ] ] ]\r\t\t\t\t\t\t\t\t\t\twhileTrue: [ priorityColumn := {leftMatrixMarker column.\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker column} max.\r\t\t\t\t\t\t\t\t\t\t\t"Find same column as prioritized or higher in left"\r\t\t\t\t\t\t\t\t\t\t\t[ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker column < priorityColumn ] ] ]\r\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ leftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ rightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ] ].\r\r\t\t\t\t\t\t\t\t\t\t\t\t\t"If no intersection - end"\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ end value ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t"Else - continue loop"\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker row ~= currentLeftRow\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ rightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ] ].\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\tpriorityColumn := leftMatrixMarker column.\r\r\t\t\t\t\t\t\t\t\t\t\t"Find same column as prioritized or higher in right"\r\t\t\t\t\t\t\t\t\t\t\t[ rightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker row = currentRightColumn\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ rightMatrixMarker column < priorityColumn ] ] ]\r\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ rightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ [ leftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tand: [ leftMatrixMarker row = currentLeftRow ] ]\r\t\t\t\t\t\t\t\t\t\t\t\t\t\twhileTrue: [ leftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ leftMarkerElement updateModelAndRedraw: leftMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ].\r\r\t\t\t\t\t\t\t\t\t\t\t\t\t"If no intersections - end"\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker isNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ end value ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t"Else - continue loop"\r\t\t\t\t\t\t\t\t\t\t\t\t\tnext value ].\r\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker row ~= currentRightColumn\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ next value ].\r\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker column = rightMatrixMarker column\r\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ visualizer highlightModel: leftMatrixMarker inGroup: #left.\r\t\t\t\t\t\t\t\t\t\t\t\t\tvisualizer\r\t\t\t\t\t\t\t\t\t\t\t\t\t\thighlightModel: rightMatrixMarker\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tinGroup: #right.\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait.\r\t\t\t\t\t\t\t\t\t\t\t\t\tsum := sum\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ (leftMatrixMarker value * rightMatrixMarker value).\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMatrixMarker := leftMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker := rightMatrixMarker rightNeighbour.\r\t\t\t\t\t\t\t\t\t\t\t\t\tleftMarkerElement updateModelAndRedraw: leftMatrixMarker.\r\t\t\t\t\t\t\t\t\t\t\t\t\trightMatrixMarker isNotNil\r\t\t\t\t\t\t\t\t\t\t\t\t\t\tifTrue: [ rightMarkerElement updateModelAndRedraw: rightMatrixMarker ].\r\t\t\t\t\t\t\t\t\t\t\t\t\t(Delay forSeconds: delay) wait ]\r\t\t\t\t\t\t\t\t\t\t\t\tifFalse: [ priorityColumn := rightMatrixMarker column ] ] ].\r\t\t\t\t\t\t\tsum = 0\r\t\t\t\t\t\t\t\tifFalse: [ newNode := COOSparseMatrixNode\r\t\t\t\t\t\t\t\t\t\trow: currentLeftRow\r\t\t\t\t\t\t\t\t\t\tcolumn: currentRightColumn\r\t\t\t\t\t\t\t\t\t\tvalue: sum.\r\t\t\t\t\t\t\t\t\tresult last rightNeighbour: newNode.\r\t\t\t\t\t\t\t\t\tnewNode leftNeighbour: result last.\r\t\t\t\t\t\t\t\t\tresult last: newNode.\r\t\t\t\t\t\t\t\t\tsum := 0.\r\t\t\t\t\t\t\t\t\tvisualizer updateResultWith: result ] ].\r\t\t\t\t\tsum = 0\r\t\t\t\t\t\tifFalse: [ newNode := COOSparseMatrixNode\r\t\t\t\t\t\t\t\trow: currentLeftRow\r\t\t\t\t\t\t\t\tcolumn: currentRightColumn\r\t\t\t\t\t\t\t\tvalue: sum.\r\t\t\t\t\t\t\tresult last rightNeighbour: newNode.\r\t\t\t\t\t\t\tnewNode leftNeighbour: result last.\r\t\t\t\t\t\t\tresult last: newNode.\r\t\t\t\t\t\t\tsum := 0.\r\t\t\t\t\t\t\tvisualizer updateResultWith: result ] ] ].\r\t"nil the reference to dummy head"\r\tresult first rightNeighbour leftNeighbour: nil.\r\tresult first: result first rightNeighbour.\r\tvisualizer updateResultWith: result ].\r\toperationProcess := operationBlock newProcess.\r\tvisualizer setUpMenuWithProcess: operationProcess.\r\t^ visualizer view',			#stamp : 'YaroslavKormushyn 10/4/2019 14:51',			#package : #LNU-SparseMatrix		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:57:43.921503+03:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#ManifestLNUSparseMatrix ))'	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ],		#time : DateAndTime [ '2019-10-04T14:57:44.005503+03:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'PackageManifest subclass: #ManifestLNUSparseMatrix\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #\'LNU-SparseMatrix-Manifest\'',				#superclassName : 'PackageManifest'			},			#name : #ManifestLNUSparseMatrix,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestLNUSparseMatrix class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteManifestLNUSparseMatrix class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteManifestLNUSparseMatrix,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Manifest,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.638503+03:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpCategoryAddition {		#classCategoryName : #LNU-SparseMatrix-ree,		#affectedPackageName : #LNU-SparseMatrix	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.707503+03:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MatrixVisualizer\r\tinstanceVariableNames: \'view source elementSize\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'Object'			},			#name : #MatrixVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixVisualizer,						#isMetaSide : false					},					#name : #view,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixVisualizer,						#isMetaSide : false					},					#name : #source,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MatrixVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'MatrixVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MatrixVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.716503+03:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixVisualizer subclass: #LILSparseMatrixVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'MatrixVisualizer'			},			#name : #LILSparseMatrixVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LILSparseMatrixVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LILSparseMatrixVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LILSparseMatrixVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.724503+03:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MatrixElement\r\tinstanceVariableNames: \'row column value source next\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'Object'			},			#name : #MatrixElement,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #value,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #source,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #next,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MatrixElement class\r\tinstanceVariableNames: \'\''				},				#name : #'MatrixElement class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MatrixElement,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.730503+03:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixOperationVisualizer subclass: #TWSparseMatrixOperationVisualizer\r\tinstanceVariableNames: \'currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker nowProcessingElementIndex leftMarkerElement rightMarkerElement\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'MatrixOperationVisualizer'			},			#name : #TWSparseMatrixOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentLeftRow,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentRightColumn,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftSavedMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #nowProcessingElementIndex,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMarkerElement,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMarkerElement,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TWSparseMatrixOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'TWSparseMatrixOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TWSparseMatrixOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.803503+03:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixOperationVisualizer subclass: #COOSparseMatrixOperationVisualizer\r\tinstanceVariableNames: \'currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker nowProcessingElementIndex leftMarkerElement rightMarkerElement\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'MatrixOperationVisualizer'			},			#name : #COOSparseMatrixOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentLeftRow,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentRightColumn,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftSavedMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #nowProcessingElementIndex,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMarkerElement,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMarkerElement,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'COOSparseMatrixOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'COOSparseMatrixOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #COOSparseMatrixOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.812503+03:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixVisualizer subclass: #COOSparseMatrixVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'MatrixVisualizer'			},			#name : #COOSparseMatrixVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'COOSparseMatrixVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'COOSparseMatrixVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #COOSparseMatrixVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.819503+03:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixVisualizer subclass: #TWSparseMatrixVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'MatrixVisualizer'			},			#name : #TWSparseMatrixVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TWSparseMatrixVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'TWSparseMatrixVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TWSparseMatrixVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.893503+03:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixOperationVisualizer subclass: #LILSparseMatrixOperationVisualizer\r\tinstanceVariableNames: \'currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker nowProcessingElementIndex leftMarkerElement rightMarkerElement\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'MatrixOperationVisualizer'			},			#name : #LILSparseMatrixOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentLeftRow,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentRightColumn,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftSavedMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #nowProcessingElementIndex,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMarkerElement,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMarkerElement,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LILSparseMatrixOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LILSparseMatrixOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LILSparseMatrixOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:37.902503+03:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-Visual,		#newCategory : #LNU-SparseMatrix-ree,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MatrixOperationVisualizer\r\tinstanceVariableNames: \'selectColor leftMatrix rightMatrix resultMatrix process composer namedGroups backgroundGroups elementSize metaLinks delay semaphore\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-ree\'',				#superclassName : 'Object'			},			#name : #MatrixOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #selectColor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMatrix,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMatrix,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #resultMatrix,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #process,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #namedGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #backgroundGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #metaLinks,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #delay,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #semaphore,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MatrixOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'MatrixOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MatrixOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-ree,			#package : #LNU-SparseMatrix,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:57.651503+03:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MatrixElement\r\tinstanceVariableNames: \'row column value source next\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'Object'			},			#name : #MatrixElement,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #value,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #source,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixElement,						#isMetaSide : false					},					#name : #next,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MatrixElement class\r\tinstanceVariableNames: \'\''				},				#name : #'MatrixElement class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MatrixElement,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:57.762503+03:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MatrixOperationVisualizer\r\tinstanceVariableNames: \'selectColor leftMatrix rightMatrix resultMatrix process composer namedGroups backgroundGroups elementSize metaLinks delay semaphore\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'Object'			},			#name : #MatrixOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #selectColor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMatrix,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMatrix,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #resultMatrix,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #process,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #composer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #namedGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #backgroundGroups,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #metaLinks,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #delay,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixOperationVisualizer,						#isMetaSide : false					},					#name : #semaphore,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MatrixOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'MatrixOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MatrixOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:57.882503+03:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixOperationVisualizer subclass: #COOSparseMatrixOperationVisualizer\r\tinstanceVariableNames: \'currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker nowProcessingElementIndex leftMarkerElement rightMarkerElement\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'MatrixOperationVisualizer'			},			#name : #COOSparseMatrixOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentLeftRow,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentRightColumn,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftSavedMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #nowProcessingElementIndex,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMarkerElement,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #COOSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMarkerElement,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'COOSparseMatrixOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'COOSparseMatrixOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #COOSparseMatrixOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:57.999503+03:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixOperationVisualizer subclass: #LILSparseMatrixOperationVisualizer\r\tinstanceVariableNames: \'currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker nowProcessingElementIndex leftMarkerElement rightMarkerElement\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'MatrixOperationVisualizer'			},			#name : #LILSparseMatrixOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentLeftRow,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentRightColumn,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftSavedMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #nowProcessingElementIndex,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMarkerElement,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LILSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMarkerElement,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LILSparseMatrixOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LILSparseMatrixOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LILSparseMatrixOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:58.121503+03:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixOperationVisualizer subclass: #TWSparseMatrixOperationVisualizer\r\tinstanceVariableNames: \'currentLeftRow currentRightColumn leftMatrixMarker leftSavedMatrixMarker rightMatrixMarker nowProcessingElementIndex leftMarkerElement rightMarkerElement\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'MatrixOperationVisualizer'			},			#name : #TWSparseMatrixOperationVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentLeftRow,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #currentRightColumn,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftSavedMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMatrixMarker,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #nowProcessingElementIndex,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #leftMarkerElement,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TWSparseMatrixOperationVisualizer,						#isMetaSide : false					},					#name : #rightMarkerElement,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TWSparseMatrixOperationVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'TWSparseMatrixOperationVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TWSparseMatrixOperationVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:58.243503+03:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #MatrixVisualizer\r\tinstanceVariableNames: \'view source elementSize\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'Object'			},			#name : #MatrixVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixVisualizer,						#isMetaSide : false					},					#name : #view,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixVisualizer,						#isMetaSide : false					},					#name : #source,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MatrixVisualizer,						#isMetaSide : false					},					#name : #elementSize,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MatrixVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'MatrixVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MatrixVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:58.365503+03:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixVisualizer subclass: #COOSparseMatrixVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'MatrixVisualizer'			},			#name : #COOSparseMatrixVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'COOSparseMatrixVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'COOSparseMatrixVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #COOSparseMatrixVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:58.485503+03:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixVisualizer subclass: #LILSparseMatrixVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'MatrixVisualizer'			},			#name : #LILSparseMatrixVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LILSparseMatrixVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'LILSparseMatrixVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LILSparseMatrixVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T14:58:58.506503+03:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #LNU-SparseMatrix-ree,		#newCategory : #LNU-SparseMatrix-Visual,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'MatrixVisualizer subclass: #TWSparseMatrixVisualizer\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LNU-SparseMatrix-Visual\'',				#superclassName : 'MatrixVisualizer'			},			#name : #TWSparseMatrixVisualizer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TWSparseMatrixVisualizer class\r\tinstanceVariableNames: \'\''				},				#name : #'TWSparseMatrixVisualizer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TWSparseMatrixVisualizer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #LNU-SparseMatrix-Visual,			#package : #LNU-SparseMatrix-Visual,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:06:16.581503+03:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'LNU-Roassal-Extensions-CompatibleUserName.1570190776',		#repositoryDescription : 'C:\\Users\\yaroslav\\Documents\\Repos\\pharo-images\\Pharo Files\\Images\\Stable 7.0 x64 Roassal2 Backup\\pharo-local\\package-cache'	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:10:13.269503+03:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'LNU-Roassal-Extensions-CompatibleUserName.1570191013',		#repositoryDescription : 'C:\\Users\\yaroslav\\Documents\\Repos\\pharo-images\\Pharo Files\\Images\\Stable 7.0 x64 Roassal2 Backup\\pharo-local\\package-cache'	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:10:24.208503+03:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'LNU-Roassal-Extensions-CompatibleUserName.1570191024',		#repositoryDescription : 'C:\\Users\\yaroslav\\Documents\\Repos\\pharo-images\\Pharo Files\\Images\\Stable 7.0 x64 Roassal2 Backup\\pharo-local\\package-cache'	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.157503+03:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTHorizontalRightAttachPoint,				#isMetaSide : false			},			#name : #'basicEndingPointOf:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - hooks"\rbasicEndingPointOf: aRTEdge\r\t^ aRTEdge to encompassingRectangle rightCenter',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTHorizontalRightAttachPoint,				#isMetaSide : false			},			#name : #'basicEndingPointOf:',			#protocol : #'as yet unclassified',			#sourceCode : 'basicEndingPointOf: aRTEdge\r\t^ aRTEdge to encompassingRectangle rightCenter',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.164503+03:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTHorizontalRightAttachPoint,				#isMetaSide : false			},			#name : #'basicStartingPointOf:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - hooks"\rbasicStartingPointOf: aRTEdge\r\t^ aRTEdge from encompassingRectangle rightCenter',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTHorizontalRightAttachPoint,				#isMetaSide : false			},			#name : #'basicStartingPointOf:',			#protocol : #'as yet unclassified',			#sourceCode : 'basicStartingPointOf: aRTEdge\r\t^ aRTEdge from encompassingRectangle rightCenter',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.169503+03:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTVerticalBottomAttachPoint,				#isMetaSide : false			},			#name : #'basicEndingPointOf:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - hooks"\rbasicEndingPointOf: aRTEdge\r\t^ aRTEdge to encompassingRectangle bottomCenter',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTVerticalBottomAttachPoint,				#isMetaSide : false			},			#name : #'basicEndingPointOf:',			#protocol : #'as yet unclassified',			#sourceCode : 'basicEndingPointOf: aRTEdge\r\t^ aRTEdge to encompassingRectangle bottomCenter',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.175503+03:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTVerticalBottomAttachPoint,				#isMetaSide : false			},			#name : #'basicStartingPointOf:',			#protocol : #'as yet unclassified',			#sourceCode : '"protocol: public - hooks"\rbasicStartingPointOf: aRTEdge\r\t^ aRTEdge from encompassingRectangle bottomCenter',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTVerticalBottomAttachPoint,				#isMetaSide : false			},			#name : #'basicStartingPointOf:',			#protocol : #'as yet unclassified',			#sourceCode : 'basicStartingPointOf: aRTEdge\r\t^ aRTEdge from encompassingRectangle bottomCenter',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.180503+03:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #horizontalRightAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: shape - attach point on edges"\rhorizontalRightAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withHorizontalRightAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #horizontalRightAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'horizontalRightAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withHorizontalRightAttachPoint',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.189503+03:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineBottommostWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineBottommostWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new withHorizontalAttachPoint; orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineBottommostWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'orthoHorizontalLineBottommostWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new withHorizontalAttachPoint; orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.195503+03:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: as yet unclassified"\rorthoHorizontalLineWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoHorizontalLineWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'orthoHorizontalLineWithOffset: offset\r\t^ self shape: (RTStyledMultiLine new orthoHorizontalBalancedToBottomWithOffset: offset)',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.202503+03:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoVerticalLineRightmostWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: as yet unclassified"\rorthoVerticalLineRightmostWithOffset: offset\r\t^ self\r\t\tshape:\r\t\t\t(RTStyledMultiLine new\r\t\t\t\twithVerticallAttachPoint;\r\t\t\t\torthoVerticalBalancedToRightWithOffset: offset)',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #'orthoVerticalLineRightmostWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'orthoVerticalLineRightmostWithOffset: offset\r\t^ self\r\t\tshape:\r\t\t\t(RTStyledMultiLine new\r\t\t\t\twithVerticallAttachPoint;\r\t\t\t\torthoVerticalBalancedToRightWithOffset: offset)',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.210503+03:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #verticalBottomAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: shape - attach point on edges"\rverticalBottomAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withVerticalBottomAttachPoint',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTShapeBuilder,				#isMetaSide : false			},			#name : #verticalBottomAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'verticalBottomAttachPoint\r\t"Set the vertical attach point for the edges to be built"\r\r\tself attachPoint: #withVerticalBottomAttachPoint',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.217503+03:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withHorizontalRightAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: attach point"\rwithHorizontalRightAttachPoint\r\t| ap |\r\tap := RTHorizontalRightAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withHorizontalRightAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'withHorizontalRightAttachPoint\r\t| ap |\r\tap := RTHorizontalRightAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.223503+03:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withVerticalBottomAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: attach point"\rwithVerticalBottomAttachPoint\r\t| ap |\r\tap := RTVerticalBottomAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTAbstractLine,				#isMetaSide : false			},			#name : #withVerticalBottomAttachPoint,			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'withVerticalBottomAttachPoint\r\t| ap |\r\tap := RTVerticalBottomAttachPoint new.\r\tself attachPoint: ap.\r\t^ ap',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.229503+03:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:withOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\t offset = Number to add to x"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalanceTo:withOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'orthoHorizontalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\t offset = Number to add to x"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := toPoint x * balance + (fromPoint x * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.235503+03:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalancedToBottomWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: public - configuration"\rorthoHorizontalBalancedToBottomWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := { toPoint x . fromPoint x } max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoHorizontalBalancedToBottomWithOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'orthoHorizontalBalancedToBottomWithOffset: offset\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midx |\r\t\t\tmidx := { toPoint x . fromPoint x } max + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: midx @ fromPoint y\r\t\t\t\twith: midx @ toPoint y\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:11:21.240503+03:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:withOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : '"protocol: public - configuration"\rorthoVerticalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\toffset = Number to add to mid y"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : 'CompatibleUserName 5/5/2019 13:26:27',			#package : #LNU-Roassal-Extensions		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RTMultiLine,				#isMetaSide : false			},			#name : #'orthoVerticalBalanceTo:withOffset:',			#protocol : #'*LNU-Roassal-Extensions',			#sourceCode : 'orthoVerticalBalanceTo: balance withOffset: offset\r\t"0 = level of fromPoint\r\t 0.5 = middle\r\t 1 = level of toPoint\r\toffset = Number to add to mid y"\r\r\tself\r\t\tblock: [ :fromPoint :toPoint | \r\t\t\t| midy |\r\t\t\tmidy := toPoint y * balance + (fromPoint y * (1 - balance)) + offset.\r\t\t\tArray\r\t\t\t\twith: fromPoint\r\t\t\t\twith: fromPoint x @ midy\r\t\t\t\twith: toPoint x @ midy\r\t\t\t\twith: toPoint ]',			#stamp : '',			#package : #LNU-Roassal-Extensions		}	}}OmEntry {	#tags : {		#author : 'YaroslavKormushyn',		#time : DateAndTime [ '2019-10-04T15:12:22.322503+03:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'LNU-Roassal-Extensions-CompatibleUserName.1570191024'		]	}}